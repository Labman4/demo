server:
  port: 9000
management:
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: ${ENDPOINTS_WEB:shutdown,health}
spring:
  mail:
    host: smtp.gmail.com
    port: 587
    properties:
      mail:
        smtp:
          proxy:
            host: ${EMAIL_PROXY:127.0.0.1}
            port: ${EMAIL_PROXY_PORT:10811}
          auth: true
          starttls:
            enable: true

  lifecycle:
    timeout-per-shutdown-phase: 10s
  jpa:
    #    defer-datasource-initialization: true
    open-in-view: false
#    properties:
#       hibernate:
##         dialect: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
#      # naming:
##      #   implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  liquibase:
    drop-first: false
    enabled: false
    clear-checksums: false
    change-log: classpath:liquibase/changelog.xml
#    rollback-file: rollback.sh
  datasource:
    hikari:
      max-lifetime: 15
#      auto-commit: false
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_IP:localhost}:${DB_PORT:5432}/${DB_DATABASE:auth}?useUnicode=true&characterEncoding=UTF-8
    username: ${DB_USER:postgres}
    password: ${DB_PASS:elpsy}
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://${DB_IP:localhost}:${DB_PORT:13306}/${DB_DATABASE:auth}?useUnicode=true&characterEncoding=UTF-8
#    username: ${DB_USER:root}
#    password: ${DB_PASS:pass}
  security:
    oauth2:
      client:
        registration:
          google-idp:
            provider: google
            client-id: ${GOOGLE_CLIENT_ID:google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:google-client-secret}
            scope: openid, https://www.googleapis.com/auth/userinfo.profile, https://www.googleapis.com/auth/userinfo.email
            client-name: Sign in with Google
        provider:
          google:
            user-name-attribute: email
      resourceserver:
        opaque-token:
          introspection-uri: ${AUTH_URL:http://localhost:9000}/oauth2/introspect
#          client-id: init
#          client-secret: just for init
#        jwt:
#          issuer-uri: ${JWT_ISSUER_URL:http://127.0.0.1:9000}
#          jwk-set-uri: ${AUTH_URL:http://127.0.0.1:9000}/oauth2/jwks

logging:
  level:
    root: ${ROOT_LOG_LEVEL:info}
    web: ${WEB_LOG_LEVEL:debug}
    org:
      springframework:
        security: ${SECURITY_LOG_LEVEL:debug}
    com:
      elpsykongroo:
        auth:
          server: ${LOG_LEVEL:debug}
#    org.springframework.boot.autoconfigure: DEBUG
service:
  vault: ${VAULT_ENABLE:true}
  redis:
    url:  ${REDIS_SERVICE:http://localhost:8379}
  adminEmail: ${ADMIN_EMAIL:woxiangqusia@gmail.com}
  initAdminAuth: ${INIT_ADMIN_AUTH:admin,permission,group}