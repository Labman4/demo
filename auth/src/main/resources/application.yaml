server:
  servlet:
    session:
      timeout: 3600
  port: 9000
  ssl:
    enabled: ${SSL:false}
    certificate: ${TLS_CERT}
    certificate-private-key: ${TLS_KEY}
management:
  endpoint:
    health:
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: ${ENDPOINTS_WEB:health}
spring:
  mail:
    host: smtp.gmail.com
    port: 587
    properties:
      mail:
        smtp:
          proxy:
            host: ${EMAIL_PROXY:127.0.0.1}
            port: ${EMAIL_PROXY_PORT:10811}
          auth: true
          starttls:
            enable: true

  lifecycle:
    timeout-per-shutdown-phase: 10s
  jpa:
    #    defer-datasource-initialization: true
    open-in-view: false
#    properties:
#       hibernate:
##         dialect: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
#      # naming:
##      #   implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
    database-platform: org.hibernate.dialect.PostgreSQLDialect
# keep below config
  liquibase:
    drop-first: false
    enabled: false
    clear-checksums: false
    change-log: classpath:liquibase/changelog.xml
#    rollback-file: rollback.sh
  datasource:
    hikari:
#      max-lifetime: 15
#      auto-commit: false
    driver-class-name: org.postgresql.Driver
#    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:postgresql://${DB_IP:localhost}:5432/${DB_DATABASE:auth}?useUnicode=true&characterEncoding=UTF-8
  security:
    oauth2:
      resourceserver:
        opaque-token:
          introspection-uri: ${AUTH_URL:http://localhost:9000}/oauth2/introspect
service:
  vault: ${VAULT_ENABLE:true}
  security: oauth2
logging:
  level:
    root: ${ROOT_LOG_LEVEL:info}
    web: ${WEB_LOG_LEVEL:debug}
    org:
      springframework:
        security: ${SECURITY_LOG_LEVEL:debug}
    com:
      elpsykongroo: ${AUTH_LOG_LEVEL:debug}