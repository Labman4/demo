<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.elpsykongroo</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.2</version>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.0.1</version>
        <relativePath/>
    </parent>
    <properties>
        <maven-checkstyle-plugin.failsOnError>true</maven-checkstyle-plugin.failsOnError>
        <maven-checkstyle-plugin.failsOnViolation>true</maven-checkstyle-plugin.failsOnViolation>
        <maven-checkstyle-plugin.includeTestSourceDirectory>true</maven-checkstyle-plugin.includeTestSourceDirectory>
        <maven.compiler.source>${java.specification.version}</maven.compiler.source>
        <maven.compiler.target>${java.specification.version}</maven.compiler.target> 
        <!-- <agentConfig>src/main/resources/META-INF/native-image/com.elpsykongroo/demo</agentConfig> -->
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
<!--            <exclusions>-->
<!--                <exclusion>-->
<!--                    <groupId>org.apache.tomcat.embed</groupId>-->
<!--                    <artifactId>tomcat-embed-core</artifactId>-->
<!--                </exclusion>-->
<!--                <exclusion>-->
<!--                    <groupId>org.apache.tomcat.embed</groupId>-->
<!--                    <artifactId>tomcat-embed-websocket</artifactId>-->
<!--                </exclusion>-->
<!--            </exclusions>-->
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.apache.tomcat.experimental</groupId>-->
<!--            <artifactId>tomcat-embed-programmatic</artifactId>-->
<!--            <version>11.0.0-M1</version>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
<!--            <exclusions>-->
<!--                <exclusion>-->
<!--                    <groupId>org.springframework.boot</groupId>-->
<!--                    <artifactId>spring-boot-starter-logging</artifactId>-->
<!--                </exclusion>-->
<!--            </exclusions>-->
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-starter-log4j2</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.apache.logging.log4j</groupId>-->
<!--            <artifactId>log4j-web</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.apache.logging.log4j</groupId>-->
<!--            <artifactId>log4j-api</artifactId>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-starter-aop</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>mysql</groupId>-->
<!--            <artifactId>mysql-connector-java</artifactId>-->
<!--        </dependency>-->
        <!-- https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter -->
<!--        <dependency>-->
<!--            <groupId>org.mybatis.spring.boot</groupId>-->
<!--            <artifactId>mybatis-spring-boot-starter</artifactId>-->
<!--            <version>3.0.1</version>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.mybatis.spring.native</groupId>-->
<!--            <artifactId>mybatis-spring-native-core</artifactId>-->
<!--            <version>0.1.0-SNAPSHOT</version>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>io.lettuce</groupId>-->
<!--            <artifactId>lettuce-core</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>redis.clients</groupId>-->
<!--            <artifactId>jedis</artifactId>-->
<!--        </dependency>-->

        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-jdbc -->
<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-starter-jdbc</artifactId>-->
<!--        </dependency>-->


        <!--        <dependency>-->
<!--            <groupId>org.springframework.cloud</groupId>-->
<!--            <artifactId>spring-cloud-starter-kubernetes-fabric8-all</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.cloud</groupId>-->
<!--            <artifactId>spring-cloud-starter-kubernetes-discoveryclient</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.cloud</groupId>-->
<!--            <artifactId>spring-cloud-starter-kubernetes-client</artifactId>-->
<!--        </dependency>-->
       <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing-bridge-otel</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-exporter-zipkin</artifactId>
        </dependency>
        <!-- <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-coyote</artifactId>
            <version>10.1.1</version>
        </dependency> -->
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-reactor-netty -->
<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-starter-reactor-netty</artifactId>-->
<!--        </dependency>-->
        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-webflux -->
       <dependency>
           <groupId>org.springframework.boot</groupId>
           <artifactId>spring-boot-starter-webflux</artifactId>
       </dependency>
       <dependency>
           <groupId>io.projectreactor.netty</groupId>
           <artifactId>reactor-netty</artifactId>
       </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.vladimir-bukhtoyarov</groupId>
            <artifactId>bucket4j-core</artifactId>
            <version>7.6.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.jetbrains.kotlinx/kotlinx-serialization-core-jvm -->
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-serialization-core-jvm</artifactId>
            <version>1.4.1</version>
        </dependency>
        <dependency>
            <groupId>com.rometools</groupId>
            <artifactId>rome</artifactId>
            <version>1.18.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!--        <dependency>-->
<!--            <groupId>org.apache.httpcomponents.client5</groupId>-->
<!--            <artifactId>httpclient5</artifactId>-->
<!--        </dependency>-->

        <!--        <dependency>-->
<!--            <groupId>com.google.guava</groupId>-->
<!--            <artifactId>guava</artifactId>-->
<!--            <type>jar</type>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.redisson</groupId>-->
<!--            <artifactId>redisson-spring-boot-starter</artifactId>-->
<!--            <version>3.17.6</version>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.redisson</groupId>-->
<!--            <artifactId>redisson</artifactId>-->
<!--            <version>3.17.6</version>-->
<!--        </dependency>-->

        <!--         logback confilict-->
<!--        <dependency>-->
<!--            <groupId>org.apache.kafka</groupId>-->
<!--            <artifactId>connect-runtime</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.apache.kafka</groupId>-->
<!--            <artifactId>connect-json</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.apache.kafka</groupId>-->
<!--            <artifactId>connect-file</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.apache.kafka</groupId>-->
<!--            <artifactId>connect-api</artifactId>-->
<!--        </dependency>-->
        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security -->

<!--        <dependency>-->
<!--            <groupId>org.liquibase</groupId>-->
<!--            <artifactId>liquibase-core</artifactId>-->
<!--            <version>4.16.1</version>-->
<!--        </dependency>-->

        <!-- https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-core -->
<!--        <dependency>-->
<!--            <groupId>io.springfox</groupId>-->
<!--            <artifactId>springfox-boot-starter</artifactId>-->
<!--            <version>3.0.0</version>-->
<!--        </dependency>-->
        <!-- https://mvnrepository.com/artifact/org.springframework.security.oauth/spring-security-oauth2 -->


        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-resource-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-jose</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.opentelemetry/opentelemetry-semconv -->
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-semconv</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-api</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.opentelemetry/opentelemetry-sdk-extension-autoconfigure -->
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.opentelemetry/opentelemetry-sdk-extension-autoconfigure -->
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk-extension-autoconfigure-spi</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry.contrib</groupId>
            <artifactId>opentelemetry-samplers</artifactId>
            <version>1.21.0-alpha</version>
        </dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <executions>
                          <execution>
                            <id>build-native</id>
                            <goals>
                              <goal>compile-no-fork</goal>
                            </goals>
                            <phase>package</phase>
                          </execution>
                          <execution>
                            <id>test-native</id>
                            <goals>
                              <goal>test</goal>
                            </goals>
                            <phase>test</phase>
                          </execution>
                        </executions>
                        <configuration>
                             <!--<configurationFileDirectories>
                                <dir>/src/main/resources/META-INF/native-image/com/elpsykongroo</dir>
                            </configurationFileDirectories> -->
                            <agent>
                                <!-- <enabled>true</enabled> -->
                                <!-- <options name="main">
                                   <option>-agentlib:native-image-agent=config-merge-dir=${agentConfig}</option>
                                   <option>experimental-class-define-support</option>
                                </options>
                                <options name="test">
                                    <option>access-filter-file=${basedir}/access-filter.json</option>
                                </options>  -->
                            </agent>
                        </configuration> 
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>process-aot</id>
                                <goals>
                                    <goal>process-aot</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <image>
                                <buildpacks>
                                    <!--                            <buildpack>gcr.io/paketo-buildpacks/graalvm</buildpack>-->
                                    <!--                            <buildpack>gcr.io/paketo-buildpacks/java-native-image</buildpack>-->
                                </buildpacks>
                                <env>
<!--                                    <HTTP_PROXY>http://192.168.1.106:1080</HTTP_PROXY>-->
<!--                                    <HTTPS_PROXY>http://192.168.1.106:1080</HTTPS_PROXY>-->
                                    <BP_JVM_VERSION>17.0.4</BP_JVM_VERSION>
                                    <BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
<!--                                    <BPE_DELIM_JAVA_TOOL_OPTIONS xml:space="preserve"> </BPE_DELIM_JAVA_TOOL_OPTIONS>-->
<!--                                    <BPE_APPEND_JAVA_TOOL_OPTIONS>-javaagent:/workspace/BOOT-INF/classes/opentelemetry-javaagent.jar</BPE_APPEND_JAVA_TOOL_OPTIONS>-->
                                </env>
                                <name>
                                    registry.elpsykongroo.com/library/${project.artifactId}:${project.version}-native
                                </name>
                                <publish>true</publish>
                                <pullPolicy>IF_NOT_PRESENT</pullPolicy>
                            </image>
                            <docker>
                                <host>unix:///run/user/1000/podman/podman.sock</host>
                                <bindHostToBuilder>true</bindHostToBuilder>
                                <publishRegistry>
                                    <username>admin</username>
                                    <password>Elpsy4783</password>
                                    <url>registry.elpsykongroo.com</url>
                                </publishRegistry>
                            </docker>
                        </configuration>
                    </plugin>
                </plugins>
                <pluginManagement>
                    <plugins>
                        <!-- <plugin>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                            <executions>
                               <execution>
                                   <id>build-image</id>
                                   <goals>
                                       <goal>build-image-no-fork</goal>
                                   </goals>
                               </execution>
                            </executions>
                        </plugin> -->
                        <plugin>
                            <groupId>org.graalvm.buildtools</groupId>
                            <artifactId>native-maven-plugin</artifactId>
                            <!-- <executions>
                                <execution>
                                    <id>build-image</id>
                                    <goals>
                                        <goal>compile-no-fork</goal>
                                    </goals>
                                </execution>  
                            </executions> -->
                            <configuration>
                                <skipNativeTests>true</skipNativeTests>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>nativeTest</id> 
            <properties>
                <classifier>exec</classifier>
            </properties> 
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>native-test</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                             <!--<configurationFileDirectories>
                                <dir>/src/main/resources/META-INF/native-image/com/elpsykongroo</dir>
                            </configurationFileDirectories> -->
                            <agent>
                                <!-- <enabled>true</enabled> -->
                                <!-- <options name="main">
                                   <option>-agentlib:native-image-agent=config-merge-dir=${agentConfig}</option>
                                   <option>experimental-class-define-support</option>
                                </options>
                                <options name="test">
                                    <option>access-filter-file=${basedir}/access-filter.json</option>
                                </options>  -->
                            </agent>
                        </configuration> 
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>process-test-aot</id>
                                <goals>
                                    <goal>process-test-aot</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <image>
                                <buildpacks>
                                    <!--                            <buildpack>gcr.io/paketo-buildpacks/graalvm</buildpack>-->
                                    <!--                            <buildpack>gcr.io/paketo-buildpacks/java-native-image</buildpack>-->
                                </buildpacks>
                                <env>
<!--                                    <HTTP_PROXY>http://192.168.1.106:1080</HTTP_PROXY>-->
<!--                                    <HTTPS_PROXY>http://192.168.1.106:1080</HTTPS_PROXY>-->
                                    <BP_JVM_VERSION>17.0.4</BP_JVM_VERSION>
                                    <BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
<!--                                    <BPE_DELIM_JAVA_TOOL_OPTIONS xml:space="preserve"> </BPE_DELIM_JAVA_TOOL_OPTIONS>-->
<!--                                    <BPE_APPEND_JAVA_TOOL_OPTIONS>-javaagent:/workspace/BOOT-INF/classes/opentelemetry-javaagent.jar</BPE_APPEND_JAVA_TOOL_OPTIONS>-->
                                </env>
                                <name>
                                    registry.elpsykongroo.com/library/${project.artifactId}:${project.version}-native
                                </name>
                                <publish>true</publish>
                                <pullPolicy>IF_NOT_PRESENT</pullPolicy>
                            </image>
                            <docker>
                                <host>unix:///run/user/1000/podman/podman.sock</host>
                                <bindHostToBuilder>true</bindHostToBuilder>
                                <publishRegistry>
                                    <username>admin</username>
                                    <password>Elpsy4783</password>
                                    <url>registry.elpsykongroo.com</url>
                                </publishRegistry>
                            </docker>
                        </configuration>
                    </plugin>
                </plugins>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                            <executions>
                               <execution>
                                   <id>build-image</id>
                                   <goals>
                                       <goal>build-image-no-fork</goal>
                                   </goals>
                               </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.graalvm.buildtools</groupId>
                            <artifactId>native-maven-plugin</artifactId>
                            <configuration>
                                <skipNativeTests>true</skipNativeTests>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
    <build>
        <plugins>
            <plugin>
                <groupId>org.basepom.maven</groupId>
                <artifactId>duplicate-finder-maven-plugin</artifactId>          
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>io.spring.javaformat</groupId>
                <artifactId>spring-javaformat-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
            </plugin> 
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>    
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>     
            <!-- <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-agent-config</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${project.build.directory}/native/agent-output/main"/>
                                <mkdir dir="${project.build.directory}/native/agent-output/test"/>
                                <copy todir="${project.build.directory}/native/agent-output/main">
                                    <fileset dir="${project.build.directory}/native/agent-output/test" />
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin> -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <image>
<!--                        <builder>paketobuildpacks/builder:full</builder>-->
                        <buildpacks>
<!--                            <buildpack>gcr.io/paketo-buildpacks/graalvm</buildpack>-->
<!--                            <buildpack>gcr.io/paketo-buildpacks/java-native-image</buildpack>-->
                        </buildpacks>
                        <env>
<!--                            <HTTP_PROXY>http://192.168.1.106:1080</HTTP_PROXY>-->
<!--                            <HTTPS_PROXY>http://192.168.1.106:1080</HTTPS_PROXY>-->
                            <BP_JVM_VERSION>17.0.4</BP_JVM_VERSION>
                            <BP_NATIVE_IMAGE>false</BP_NATIVE_IMAGE>
<!--                            <BPE_DELIM_JAVA_TOOL_OPTIONS xml:space="preserve"> </BPE_DELIM_JAVA_TOOL_OPTIONS>-->
<!--                            <BPE_APPEND_JAVA_TOOL_OPTIONS>-Xmx=300M</BPE_APPEND_JAVA_TOOL_OPTIONS>-->

                            <!--                            <BPE_APPEND_JAVA_TOOL_OPTIONS>-javaagent:/otel-auto-instrumentation/javaagent.jar</BPE_APPEND_JAVA_TOOL_OPTIONS>-->
<!--                            <BP_NATIVE_IMAGE_BUILD_ARGUMENTS>&#45;&#45;enable-https</BP_NATIVE_IMAGE_BUILD_ARGUMENTS>-->
                        </env>
                        <name>
                            registry.elpsykongroo.com/library/${project.artifactId}:${project.version}
                        </name>
                        <publish>true</publish>
                        <pullPolicy>IF_NOT_PRESENT</pullPolicy>
                    </image>
                    <docker>
                        <host>unix:///run/podman/podman.sock</host>
                        <bindHostToBuilder>true</bindHostToBuilder>
                        <publishRegistry>
                            <username>admin</username>
                            <password>Elpsy4783</password>
                            <url>registry.elpsykongroo.com</url>
                        </publishRegistry>
                    </docker>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
<!--                    <compilerArgument>-Xlint:unchecked</compilerArgument>-->
<!--                    <compilerArgument>-Xlint:deprecation</compilerArgument>-->
                </configuration>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <reportSets>
                  <reportSet>
                    <reports>
                      <!-- select non-aggregate reports -->
                      <report>report</report>
                    </reports>
                  </reportSet>
                </reportSets>
              </plugin>
        </plugins>
    </reporting>
    <dependencyManagement>
        <dependencies>
<!--            <dependency>-->
<!--                <groupId>org.springframework.cloud</groupId>-->
<!--                <artifactId>spring-cloud-dependencies</artifactId>-->
<!--                <version>2021.0.3</version>-->
<!--                <type>pom</type>-->
<!--                <scope>import</scope>-->
<!--            </dependency>-->
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-tracing-bom</artifactId>
                <version>${micrometer-tracing.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-bom</artifactId>
                <version>1.21.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-bom-alpha</artifactId>
                <version>1.21.0-alpha</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-bom</artifactId>
                <version>2022.0.0</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <repositories>
        <repository>
            <id>spring-release</id>
            <name>Spring release</name>
            <url>https://repo.spring.io/release</url>
        </repository>
        <repository>
            <id>sonatype-oss-snapshots</id>
            <name>Sonatype OSS Snapshots Repository</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>graalvm-native-build-tools-snapshots</id>
            <name>GraalVM native-build-tools Snapshots</name>
            <url>https://raw.githubusercontent.com/graalvm/native-build-tools/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-release</id>
            <name>Spring release</name>
            <url>https://repo.spring.io/release</url>
        </pluginRepository>
    </pluginRepositories>
</project>