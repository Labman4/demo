server:
  tomcat:
    connection-timeout: 60
    keep-alive-timeout: 60
#  http2:
#    enabled: true
  shutdown: graceful
  port: 8443
  ssl:
    enabled: ${SSL:false}
    certificate: ${TLS_CERT}
    certificate-private-key: ${TLS_KEY}
  #    key-store: ${SSL_JKS:}
  #    key-store-password: ${SSL_PASS:password}
  #    key-alias: api

spring:
  servlet:
    multipart:
      max-request-size: -1
      max-file-size: -1
#  cloud:
#    openfeign:
#      client:
#        config:
#          storage:
#            url:
#          auth:
#            url:
#          es:
#            url: http://localhost:9201
#          redis:
#            url: http://localhost:8379
  #  cloud:
  #    kubernetes:
  #      discovery:
  #        enabled: true
  #        all-namespaces: true
  #        #        master-url: https://kubernetes.default.svc
  #        #      include-not-ready-addresses: true
  #        discovery-server-url: ${DISCOVERY_URL}
  #    discovery:
  #      client:
  #        health-indicator:
  #          enabled: false
  main:
    allow-bean-definition-overriding: true
  lifecycle:
    timeout-per-shutdown-phase: 10s
  application:
    name: ${APP_NAME:demo}
  security:
    oauth2:
      resource-server:
        opaque-token:
          introspection-uri: ${AUTH_URL:http://localhost:9000}/oauth2/introspect
#          client-id:
#          client-secret:
  kafka:
    bootstrap-servers: ${KAFKA_URL:kafka}
    security:
      protocol: ssl
    ssl:
      trust-store-location: ${JKS:jks}
      trust-store-password: ${JKS_PASS:pass}
    consumer:
      #      security:
      #        protocol: ssl
      auto-offset-reset: earliest

logging:
  level:
    root: info
#  log4j2:
#    config:
#      override:
#        - classpath:log4j2-spring.xml
#    org:
#      springframework:
#        web:
#          filter:
#            CommonsRequestLoggingFilter: DEBUG
management:
  tracing:
    enabled: ${TRACE_ENABLED:false}
    sampling:
      probability: ${TRACE_SAMPLING:1.0}
  httpexchanges:
    recording:
      enabled: ${HTTP_RECORD:true}
  endpoint:
    shutdown.enabled: true
    health:
      probes:
        enabled: true
    prometheus:
      enabled: true
    httpexchanges:
      enabled: true
  metrics:
    tags:
      application: demo
  endpoints:
    web:
      exposure:
        include: ${ENDPOINTS_WEB:health,prometheus,httpexchanges,shutdown}
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_HOST:http://localhost:9411/api/v2/spans}

service:
  vault: ${VAULT_ENABLE:true}


request:
  limit:
    global:
      tokens: ${GLOBAL_REQUEST_LIMIT:1000}
      duration: ${GLOBAL_REQUEST_DURATION:1}
      speed: ${GLOBAL_REQUEST_DURATION_SPEED:100}
    scope:
      tokens: ${REQUEST_LIMIT:100}
      duration: ${REQUEST_DURATION:1}
      speed: ${REQUEST_DURATION_SPEED:10}
  path:
    permit: ${PERMIT_PATH:/public/**}
    nonPrivate: ${PUBLIC_PATH:/public}
    limit: ${LIMIT_PATH:/}
    exclude: ${EXCLUDE_PATH:/actuator}
    filter: ${FILTER_PATH:/}
  record:
    exclude:
      path:  ${RECORD_EXCLUDE_PATH:/actuator}
      ip:  ${RECORD_EXCLUDE_IP:ip.elpsykongroo.com, localhost}
  header:
    ip: ${IP_HEADER:x-real-ip}
    black: ${BLACK_HEADER:x-real-ip}
    white: ${WHITE_HEADER:x-real-ip}
    record: ${RECORD_HEADER:x-real-ip}
