server:
  http2:
    enabled: true
  #  netty:
  #    connection-timeout: -1
  tomcat:
    connection-timeout: 12000
    keep-alive-timeout: 12000
  shutdown: graceful
  port: 8443
  ssl:
    enabled: ${SSL:false}
    certificate: ${TLS_CERT}
    certificate-private-key: ${TLS_KEY}
  #    key-store: ${SSL_JKS:}
  #    key-store-password: ${SSL_PASS:password}
  #    key-alias: api

spring:
  servlet:
    multipart:
      max-request-size: -1
      max-file-size: -1
#  cloud:
#    openfeign:
#      client:
#        config:
#          storage:
#            url:
#          auth:
#            url:
#          es:
#            url: http://localhost:9201
#          redis:
#            url: http://localhost:8379
  #  cloud:
  #    kubernetes:
  #      discovery:
  #        enabled: true
  #        all-namespaces: true
  #        #        master-url: https://kubernetes.default.svc
  #        #      include-not-ready-addresses: true
  #        discovery-server-url: ${DISCOVERY_URL}
  #    discovery:
  #      client:
  #        health-indicator:
  #          enabled: false
  main:
    allow-bean-definition-overriding: true
  lifecycle:
    timeout-per-shutdown-phase: 10s
  application:
    name: ${APP_NAME:gateway}
  security:
    oauth2:
      resource-server:
        opaque-token:
          introspection-uri: ${AUTH_URL:http://localhost:9000}/oauth2/introspect
logging:
  level:
    root: ${ROOT_LOG_LEVEL:info}
    web: ${WEB_LOG_LEVEL:info}
    com:
      elpsykongroo:
        gateway: ${GATEWAY_LOG_LEVEL:debug}
    org:
      springframework:
        security: ${SECURITY_LOG_LEVEL:debug}
#  log4j2:
#    config:
#      override:
#        - classpath:log4j2-spring.xml
#    org:
#      springframework:
#        web:
#          filter:
#            CommonsRequestLoggingFilter: DEBUG
management:
  tracing:
    enabled: ${TRACE_ENABLED:false}
    sampling:
      probability: ${TRACE_SAMPLING:1.0}
  httpexchanges:
    recording:
      enabled: ${HTTP_RECORD:true}
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
    prometheus:
      enabled: true
    httpexchanges:
      enabled: true
  metrics:
    tags:
      application: ${METRICS_TAG:gateway}
  endpoints:
    web:
      exposure:
        include: ${ENDPOINTS_WEB:health,prometheus,httpexchanges,shutdown}
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_HOST:http://localhost:9411/api/v2/spans}

service:
  vault: ${VAULT_ENABLE:true}