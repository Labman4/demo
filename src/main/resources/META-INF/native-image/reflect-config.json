[
{
  "name":"[B"
},
{
  "name":"[I"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Lcom.github.dockerjava.api.model.Bind;"
},
{
  "name":"[Lcom.github.dockerjava.api.model.Capability;"
},
{
  "name":"[Lcom.github.dockerjava.api.model.Device;"
},
{
  "name":"[Lcom.github.dockerjava.api.model.ExposedPort;"
},
{
  "name":"[Lcom.github.dockerjava.api.model.Link;"
},
{
  "name":"[Lcom.github.dockerjava.api.model.LxcConf;"
},
{
  "name":"[Lcom.github.dockerjava.api.model.PortBinding;"
},
{
  "name":"[Lcom.github.dockerjava.api.model.Ports$Binding;"
},
{
  "name":"[Lcom.github.dockerjava.api.model.Ulimit;"
},
{
  "name":"[Lcom.github.dockerjava.api.model.Volume;"
},
{
  "name":"[Lcom.github.dockerjava.api.model.VolumeBind;"
},
{
  "name":"[Lcom.github.dockerjava.api.model.VolumeRW;"
},
{
  "name":"[Lcom.github.dockerjava.api.model.VolumesFrom;"
},
{
  "name":"[Ljava.io.Serializable;"
},
{
  "name":"[Ljava.lang.CharSequence;"
},
{
  "name":"[Ljava.lang.Comparable;"
},
{
  "name":"[Ljava.lang.Object;"
},
{
  "name":"[Ljava.lang.String;"
},
{
  "name":"[Ljava.lang.constant.Constable;"
},
{
  "name":"[Ljava.lang.constant.ConstantDesc;"
},
{
  "name":"[Lorg.springframework.boot.context.config.ConfigDataLocation;"
},
{
  "name":"[Lorg.springframework.core.io.InputStreamSource;"
},
{
  "name":"[Lorg.springframework.core.io.Resource;",
  "queryAllDeclaredMethods":true
},
{
  "name":"[Lorg.springframework.data.elasticsearch.annotations.IndexPrefixes;"
},
{
  "name":"[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
},
{
  "name":"[Lorg.springframework.web.bind.annotation.RequestMethod;"
},
{
  "name":"[Lorg.testcontainers.shaded.com.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
},
{
  "name":"[Lorg.testcontainers.shaded.com.google.common.collect.ImmutableMapEntry;"
},
{
  "name":"[Z"
},
{
  "name":"boolean",
  "queryAllDeclaredMethods":true
},
{
  "name":"ch.qos.logback.classic.LoggerContext"
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core$clojure_version"
},
{
  "name":"co.elastic.clients.ApiClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"_jsonpMapper","parameterTypes":[] }, 
    {"name":"_transport","parameterTypes":[] }, 
    {"name":"_transportOptions","parameterTypes":[] }, 
    {"name":"withTransportOptions","parameterTypes":["java.util.function.Function"] }
  ]
},
{
  "name":"co.elastic.clients.elasticsearch.ElasticsearchClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"asyncSearch","parameterTypes":[] }, 
    {"name":"autoscaling","parameterTypes":[] }, 
    {"name":"bulk","parameterTypes":[] }, 
    {"name":"bulk","parameterTypes":["co.elastic.clients.elasticsearch.core.BulkRequest"] }, 
    {"name":"bulk","parameterTypes":["java.util.function.Function"] }, 
    {"name":"cat","parameterTypes":[] }, 
    {"name":"ccr","parameterTypes":[] }, 
    {"name":"clearScroll","parameterTypes":[] }, 
    {"name":"clearScroll","parameterTypes":["co.elastic.clients.elasticsearch.core.ClearScrollRequest"] }, 
    {"name":"clearScroll","parameterTypes":["java.util.function.Function"] }, 
    {"name":"closePointInTime","parameterTypes":["co.elastic.clients.elasticsearch.core.ClosePointInTimeRequest"] }, 
    {"name":"closePointInTime","parameterTypes":["java.util.function.Function"] }, 
    {"name":"count","parameterTypes":[] }, 
    {"name":"count","parameterTypes":["co.elastic.clients.elasticsearch.core.CountRequest"] }, 
    {"name":"count","parameterTypes":["java.util.function.Function"] }, 
    {"name":"create","parameterTypes":["co.elastic.clients.elasticsearch.core.CreateRequest"] }, 
    {"name":"create","parameterTypes":["java.util.function.Function"] }, 
    {"name":"danglingIndices","parameterTypes":[] }, 
    {"name":"delete","parameterTypes":["co.elastic.clients.elasticsearch.core.DeleteRequest"] }, 
    {"name":"delete","parameterTypes":["java.util.function.Function"] }, 
    {"name":"deleteByQuery","parameterTypes":["co.elastic.clients.elasticsearch.core.DeleteByQueryRequest"] }, 
    {"name":"deleteByQuery","parameterTypes":["java.util.function.Function"] }, 
    {"name":"deleteByQueryRethrottle","parameterTypes":["co.elastic.clients.elasticsearch.core.DeleteByQueryRethrottleRequest"] }, 
    {"name":"deleteByQueryRethrottle","parameterTypes":["java.util.function.Function"] }, 
    {"name":"deleteScript","parameterTypes":["co.elastic.clients.elasticsearch.core.DeleteScriptRequest"] }, 
    {"name":"deleteScript","parameterTypes":["java.util.function.Function"] }, 
    {"name":"enrich","parameterTypes":[] }, 
    {"name":"eql","parameterTypes":[] }, 
    {"name":"exists","parameterTypes":["co.elastic.clients.elasticsearch.core.ExistsRequest"] }, 
    {"name":"exists","parameterTypes":["java.util.function.Function"] }, 
    {"name":"existsSource","parameterTypes":["co.elastic.clients.elasticsearch.core.ExistsSourceRequest"] }, 
    {"name":"existsSource","parameterTypes":["java.util.function.Function"] }, 
    {"name":"explain","parameterTypes":["co.elastic.clients.elasticsearch.core.ExplainRequest","java.lang.Class"] }, 
    {"name":"explain","parameterTypes":["java.util.function.Function","java.lang.Class"] }, 
    {"name":"features","parameterTypes":[] }, 
    {"name":"fieldCaps","parameterTypes":[] }, 
    {"name":"fieldCaps","parameterTypes":["co.elastic.clients.elasticsearch.core.FieldCapsRequest"] }, 
    {"name":"fieldCaps","parameterTypes":["java.util.function.Function"] }, 
    {"name":"fleet","parameterTypes":[] }, 
    {"name":"get","parameterTypes":["co.elastic.clients.elasticsearch.core.GetRequest","java.lang.Class"] }, 
    {"name":"get","parameterTypes":["java.util.function.Function","java.lang.Class"] }, 
    {"name":"getScript","parameterTypes":["co.elastic.clients.elasticsearch.core.GetScriptRequest"] }, 
    {"name":"getScript","parameterTypes":["java.util.function.Function"] }, 
    {"name":"getScriptContext","parameterTypes":[] }, 
    {"name":"getScriptLanguages","parameterTypes":[] }, 
    {"name":"getSource","parameterTypes":["co.elastic.clients.elasticsearch.core.GetSourceRequest","java.lang.Class"] }, 
    {"name":"getSource","parameterTypes":["java.util.function.Function","java.lang.Class"] }, 
    {"name":"graph","parameterTypes":[] }, 
    {"name":"ilm","parameterTypes":[] }, 
    {"name":"index","parameterTypes":["co.elastic.clients.elasticsearch.core.IndexRequest"] }, 
    {"name":"index","parameterTypes":["java.util.function.Function"] }, 
    {"name":"indices","parameterTypes":[] }, 
    {"name":"info","parameterTypes":[] }, 
    {"name":"ingest","parameterTypes":[] }, 
    {"name":"knnSearch","parameterTypes":["co.elastic.clients.elasticsearch.core.KnnSearchRequest","java.lang.Class"] }, 
    {"name":"knnSearch","parameterTypes":["java.util.function.Function","java.lang.Class"] }, 
    {"name":"license","parameterTypes":[] }, 
    {"name":"logstash","parameterTypes":[] }, 
    {"name":"mget","parameterTypes":["co.elastic.clients.elasticsearch.core.MgetRequest","java.lang.Class"] }, 
    {"name":"mget","parameterTypes":["java.util.function.Function","java.lang.Class"] }, 
    {"name":"migration","parameterTypes":[] }, 
    {"name":"ml","parameterTypes":[] }, 
    {"name":"monitoring","parameterTypes":[] }, 
    {"name":"msearch","parameterTypes":["co.elastic.clients.elasticsearch.core.MsearchRequest","java.lang.Class"] }, 
    {"name":"msearch","parameterTypes":["java.util.function.Function","java.lang.Class"] }, 
    {"name":"msearchTemplate","parameterTypes":["co.elastic.clients.elasticsearch.core.MsearchTemplateRequest","java.lang.Class"] }, 
    {"name":"msearchTemplate","parameterTypes":["java.util.function.Function","java.lang.Class"] }, 
    {"name":"mtermvectors","parameterTypes":[] }, 
    {"name":"mtermvectors","parameterTypes":["co.elastic.clients.elasticsearch.core.MtermvectorsRequest"] }, 
    {"name":"mtermvectors","parameterTypes":["java.util.function.Function"] }, 
    {"name":"nodes","parameterTypes":[] }, 
    {"name":"openPointInTime","parameterTypes":["co.elastic.clients.elasticsearch.core.OpenPointInTimeRequest"] }, 
    {"name":"openPointInTime","parameterTypes":["java.util.function.Function"] }, 
    {"name":"ping","parameterTypes":[] }, 
    {"name":"putScript","parameterTypes":["co.elastic.clients.elasticsearch.core.PutScriptRequest"] }, 
    {"name":"putScript","parameterTypes":["java.util.function.Function"] }, 
    {"name":"rankEval","parameterTypes":["co.elastic.clients.elasticsearch.core.RankEvalRequest"] }, 
    {"name":"rankEval","parameterTypes":["java.util.function.Function"] }, 
    {"name":"reindex","parameterTypes":["co.elastic.clients.elasticsearch.core.ReindexRequest"] }, 
    {"name":"reindex","parameterTypes":["java.util.function.Function"] }, 
    {"name":"reindexRethrottle","parameterTypes":["co.elastic.clients.elasticsearch.core.ReindexRethrottleRequest"] }, 
    {"name":"reindexRethrottle","parameterTypes":["java.util.function.Function"] }, 
    {"name":"renderSearchTemplate","parameterTypes":[] }, 
    {"name":"renderSearchTemplate","parameterTypes":["co.elastic.clients.elasticsearch.core.RenderSearchTemplateRequest"] }, 
    {"name":"renderSearchTemplate","parameterTypes":["java.util.function.Function"] }, 
    {"name":"rollup","parameterTypes":[] }, 
    {"name":"scriptsPainlessExecute","parameterTypes":["co.elastic.clients.elasticsearch.core.ScriptsPainlessExecuteRequest","java.lang.Class"] }, 
    {"name":"scriptsPainlessExecute","parameterTypes":["java.util.function.Function","java.lang.Class"] }, 
    {"name":"scroll","parameterTypes":["co.elastic.clients.elasticsearch.core.ScrollRequest","java.lang.Class"] }, 
    {"name":"scroll","parameterTypes":["java.util.function.Function","java.lang.Class"] }, 
    {"name":"search","parameterTypes":["co.elastic.clients.elasticsearch.core.SearchRequest","java.lang.Class"] }, 
    {"name":"search","parameterTypes":["java.util.function.Function","java.lang.Class"] }, 
    {"name":"searchMvt","parameterTypes":["co.elastic.clients.elasticsearch.core.SearchMvtRequest"] }, 
    {"name":"searchMvt","parameterTypes":["java.util.function.Function"] }, 
    {"name":"searchShards","parameterTypes":[] }, 
    {"name":"searchShards","parameterTypes":["co.elastic.clients.elasticsearch.core.SearchShardsRequest"] }, 
    {"name":"searchShards","parameterTypes":["java.util.function.Function"] }, 
    {"name":"searchTemplate","parameterTypes":["co.elastic.clients.elasticsearch.core.SearchTemplateRequest","java.lang.Class"] }, 
    {"name":"searchTemplate","parameterTypes":["java.util.function.Function","java.lang.Class"] }, 
    {"name":"searchableSnapshots","parameterTypes":[] }, 
    {"name":"security","parameterTypes":[] }, 
    {"name":"shutdown","parameterTypes":[] }, 
    {"name":"slm","parameterTypes":[] }, 
    {"name":"snapshot","parameterTypes":[] }, 
    {"name":"sql","parameterTypes":[] }, 
    {"name":"ssl","parameterTypes":[] }, 
    {"name":"tasks","parameterTypes":[] }, 
    {"name":"termsEnum","parameterTypes":["co.elastic.clients.elasticsearch.core.TermsEnumRequest"] }, 
    {"name":"termsEnum","parameterTypes":["java.util.function.Function"] }, 
    {"name":"termvectors","parameterTypes":["co.elastic.clients.elasticsearch.core.TermvectorsRequest"] }, 
    {"name":"termvectors","parameterTypes":["java.util.function.Function"] }, 
    {"name":"transform","parameterTypes":[] }, 
    {"name":"update","parameterTypes":["co.elastic.clients.elasticsearch.core.UpdateRequest","java.lang.Class"] }, 
    {"name":"update","parameterTypes":["java.util.function.Function","java.lang.Class"] }, 
    {"name":"updateByQuery","parameterTypes":["co.elastic.clients.elasticsearch.core.UpdateByQueryRequest"] }, 
    {"name":"updateByQuery","parameterTypes":["java.util.function.Function"] }, 
    {"name":"updateByQueryRethrottle","parameterTypes":["co.elastic.clients.elasticsearch.core.UpdateByQueryRethrottleRequest"] }, 
    {"name":"updateByQueryRethrottle","parameterTypes":["java.util.function.Function"] }, 
    {"name":"watcher","parameterTypes":[] }, 
    {"name":"withTransportOptions","parameterTypes":["co.elastic.clients.transport.TransportOptions"] }, 
    {"name":"xpack","parameterTypes":[] }
  ]
},
{
  "name":"co.elastic.clients.json.JsonpMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"attribute","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"ignoreUnknownFields","parameterTypes":[] }
  ]
},
{
  "name":"co.elastic.clients.json.JsonpMapperBase",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"attribute","parameterTypes":["java.lang.String"] }, 
    {"name":"deserialize","parameterTypes":["jakarta.json.stream.JsonParser","java.lang.Class"] }, 
    {"name":"findDeserializer","parameterTypes":["java.lang.Class"] }, 
    {"name":"findSerializer","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"co.elastic.clients.json.jackson.JacksonJsonpMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"jsonProvider","parameterTypes":[] }, 
    {"name":"serialize","parameterTypes":["java.lang.Object","jakarta.json.stream.JsonGenerator"] }, 
    {"name":"withAttribute","parameterTypes":["java.lang.String","java.lang.Object"] }
  ]
},
{
  "name":"co.elastic.clients.transport.ElasticsearchTransport",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"co.elastic.clients.transport.Transport",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"co.elastic.clients.transport.rest_client.RestClientTransport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"close","parameterTypes":[] }, 
    {"name":"jsonpMapper","parameterTypes":[] }, 
    {"name":"options","parameterTypes":[] }, 
    {"name":"performRequest","parameterTypes":["java.lang.Object","co.elastic.clients.transport.Endpoint","co.elastic.clients.transport.TransportOptions"] }, 
    {"name":"performRequestAsync","parameterTypes":["java.lang.Object","co.elastic.clients.transport.Endpoint","co.elastic.clients.transport.TransportOptions"] }
  ]
},
{
  "name":"com.elpsykongroo.demo.DemoApplication",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.elpsykongroo.demo.DemoApplication$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "methods":[
    {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }
  ]
},
{
  "name":"com.elpsykongroo.demo.common.CommonResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.elpsykongroo.demo.config.ElasticConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"clientConfiguration","parameterTypes":[] }]
},
{
  "name":"com.elpsykongroo.demo.config.RequestConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getHeader","parameterTypes":[] }, 
    {"name":"getLimit","parameterTypes":[] }, 
    {"name":"getPath","parameterTypes":[] }, 
    {"name":"setHeader","parameterTypes":["com.elpsykongroo.demo.config.RequestConfig$Header"] }, 
    {"name":"setLimit","parameterTypes":["com.elpsykongroo.demo.config.RequestConfig$Limit"] }, 
    {"name":"setPath","parameterTypes":["com.elpsykongroo.demo.config.RequestConfig$Path"] }
  ]
},
{
  "name":"com.elpsykongroo.demo.config.RequestConfig$Header",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setBlack","parameterTypes":["java.lang.String"] }, 
    {"name":"setIp","parameterTypes":["java.lang.String"] }, 
    {"name":"setWhite","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"com.elpsykongroo.demo.config.RequestConfig$Limit",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getGlobal","parameterTypes":[] }, 
    {"name":"getScope","parameterTypes":[] }, 
    {"name":"setGlobal","parameterTypes":["com.elpsykongroo.demo.config.RequestConfig$Token"] }, 
    {"name":"setScope","parameterTypes":["com.elpsykongroo.demo.config.RequestConfig$Token"] }
  ]
},
{
  "name":"com.elpsykongroo.demo.config.RequestConfig$Path",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getExclude","parameterTypes":[] }, 
    {"name":"setExclude","parameterTypes":["com.elpsykongroo.demo.config.RequestConfig$Path$Exclude"] }, 
    {"name":"setFilter","parameterTypes":["java.lang.String"] }, 
    {"name":"setLimit","parameterTypes":["java.lang.String"] }, 
    {"name":"setNonPrivate","parameterTypes":["java.lang.String"] }, 
    {"name":"setPermit","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"com.elpsykongroo.demo.config.RequestConfig$Path$Exclude",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setAll","parameterTypes":["java.lang.String"] }, 
    {"name":"setRecord","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"com.elpsykongroo.demo.config.RequestConfig$Token",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setDuration","parameterTypes":["java.lang.Long"] }, 
    {"name":"setSpeed","parameterTypes":["java.lang.Long"] }, 
    {"name":"setTokens","parameterTypes":["java.lang.Long"] }
  ]
},
{
  "name":"com.elpsykongroo.demo.config.SecurityConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.elpsykongroo.demo.config.ServiceConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getEs","parameterTypes":[] }, 
    {"name":"getSsl","parameterTypes":[] }, 
    {"name":"setEs","parameterTypes":["com.elpsykongroo.demo.config.ServiceConfig$ES"] }, 
    {"name":"setSsl","parameterTypes":["com.elpsykongroo.demo.config.ServiceConfig$SSL"] }
  ]
},
{
  "name":"com.elpsykongroo.demo.config.ServiceConfig$ES",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getSsl","parameterTypes":[] }, 
    {"name":"getTimeout","parameterTypes":[] }, 
    {"name":"setNodes","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setPass","parameterTypes":["java.lang.String"] }, 
    {"name":"setSsl","parameterTypes":["com.elpsykongroo.demo.config.ServiceConfig$SSL"] }, 
    {"name":"setTimeout","parameterTypes":["com.elpsykongroo.demo.config.ServiceConfig$TimeOut"] }, 
    {"name":"setUser","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"com.elpsykongroo.demo.config.ServiceConfig$SSL",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setCa","parameterTypes":["java.lang.String"] }, 
    {"name":"setCert","parameterTypes":["java.lang.String"] }, 
    {"name":"setKey","parameterTypes":["java.lang.String"] }, 
    {"name":"setType","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"com.elpsykongroo.demo.config.ServiceConfig$TimeOut",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setConnect","parameterTypes":["java.lang.String"] }, 
    {"name":"setSocket","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"com.elpsykongroo.demo.config.TomcatConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.elpsykongroo.demo.config.TraceConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.elpsykongroo.demo.config.VaultTemplateConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"clientAuthentication","parameterTypes":[] }, 
    {"name":"vaultEndpoint","parameterTypes":[] }
  ]
},
{
  "name":"com.elpsykongroo.demo.config.VaultTemplateConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "methods":[
    {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }
  ]
},
{
  "name":"com.elpsykongroo.demo.config.VaultTemplateConfig$$SpringCGLIB$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.elpsykongroo.demo.controller.AccessRecordContronller",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.elpsykongroo.demo.controller.IPManagerContronller",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.elpsykongroo.demo.controller.external.IPContronller",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.elpsykongroo.demo.domain.AccessRecord",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.elpsykongroo.demo.domain.IPList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.elpsykongroo.demo.domain.IPManage",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.elpsykongroo.demo.filter.ThrottlingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"com.elpsykongroo.demo.repo.IPListRepo",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.elpsykongroo.demo.repo.elasticsearch.AccessRecordRepo",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.elpsykongroo.demo.repo.elasticsearch.IPRepo",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.elpsykongroo.demo.service.AccessRecordService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.elpsykongroo.demo.service.IPManagerService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.elpsykongroo.demo.service.impl.AccessRecordServiceImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"deleteRecord","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"filterUserAgent","parameterTypes":["java.lang.String"] }, 
    {"name":"findAll","parameterTypes":["java.lang.String","java.lang.String","java.lang.String"] }, 
    {"name":"saveAcessRecord","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }
  ]
},
{
  "name":"com.elpsykongroo.demo.service.impl.IPMangerServiceImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"accessIP","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String"] }, 
    {"name":"add","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"blackOrWhiteList","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String"] }, 
    {"name":"list","parameterTypes":["java.lang.String","java.lang.String","java.lang.String"] }, 
    {"name":"patch","parameterTypes":["java.lang.String","java.lang.String","java.lang.String"] }
  ]
},
{
  "name":"com.elpsykongroo.demo.testconfig.RedisConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.elpsykongroo.demo.testconfig.RedisConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "methods":[
    {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }
  ]
},
{
  "name":"com.elpsykongroo.demo.testconfig.RedisConfig$$SpringCGLIB$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.elpsykongroo.demo.testconfig.RedisConfig$$SpringCGLIB$$2",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.elpsykongroo.demo.web.WebClientTest",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"overrideTestProperties","parameterTypes":["org.springframework.test.context.DynamicPropertyRegistry"] }, 
    {"name":"setUp","parameterTypes":[] }
  ]
},
{
  "name":"com.fasterxml.jackson.core.JsonGenerator"
},
{
  "name":"com.fasterxml.jackson.core.ObjectCodec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getJsonFactory","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.core.TreeCodec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.core.Versioned",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.Module",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getDependencies","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"createArrayNode","parameterTypes":[] }, 
    {"name":"createObjectNode","parameterTypes":[] }, 
    {"name":"getFactory","parameterTypes":[] }, 
    {"name":"missingNode","parameterTypes":[] }, 
    {"name":"nullNode","parameterTypes":[] }, 
    {"name":"readTree","parameterTypes":["com.fasterxml.jackson.core.JsonParser"] }, 
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, 
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, 
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, 
    {"name":"treeAsTokens","parameterTypes":["com.fasterxml.jackson.core.TreeNode"] }, 
    {"name":"treeToValue","parameterTypes":["com.fasterxml.jackson.core.TreeNode","java.lang.Class"] }, 
    {"name":"version","parameterTypes":[] }, 
    {"name":"writeTree","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","com.fasterxml.jackson.core.TreeNode"] }, 
    {"name":"writeValue","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","java.lang.Object"] }
  ]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addAbstractTypeMapping","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"addDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonDeserializer"] }, 
    {"name":"addKeyDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.KeyDeserializer"] }, 
    {"name":"addKeySerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, 
    {"name":"addSerializer","parameterTypes":["com.fasterxml.jackson.databind.JsonSerializer"] }, 
    {"name":"addSerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, 
    {"name":"addValueInstantiator","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.deser.ValueInstantiator"] }, 
    {"name":"getModuleName","parameterTypes":[] }, 
    {"name":"getTypeId","parameterTypes":[] }, 
    {"name":"registerSubtypes","parameterTypes":["java.util.Collection"] }, 
    {"name":"registerSubtypes","parameterTypes":["com.fasterxml.jackson.databind.jsontype.NamedType[]"] }, 
    {"name":"registerSubtypes","parameterTypes":["java.lang.Class[]"] }, 
    {"name":"setAbstractTypes","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"] }, 
    {"name":"setDeserializerModifier","parameterTypes":["com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"] }, 
    {"name":"setDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleDeserializers"] }, 
    {"name":"setKeyDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"] }, 
    {"name":"setKeySerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, 
    {"name":"setMixInAnnotation","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"setSerializerModifier","parameterTypes":["com.fasterxml.jackson.databind.ser.BeanSerializerModifier"] }, 
    {"name":"setSerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, 
    {"name":"setValueInstantiators","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleValueInstantiators"] }, 
    {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }, 
    {"name":"version","parameterTypes":[] }
  ]
},
{
  "name":"com.fasterxml.jackson.dataformat.cbor$CBORFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.cbor.CBORFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.smile$SmileFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.smile.SmileFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.xml$XmlMapper"
},
{
  "name":"com.fasterxml.jackson.dataformat.xml.XmlMapper"
},
{
  "name":"com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.module.kotlin$KotlinModule"
},
{
  "name":"com.fasterxml.jackson.module.kotlin.KotlinModule"
},
{
  "name":"com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }]
},
{
  "name":"com.github.dockerjava.api.command.AsyncDockerCmd",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.command.CreateContainerCmd",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.command.CreateContainerResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }, 
    {"name":"setWarnings","parameterTypes":["java.lang.String[]"] }
  ]
},
{
  "name":"com.github.dockerjava.api.command.DockerCmd",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.command.ExecCreateCmd",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.command.ExecCreateCmdResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.command.ExecStartCmd",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.command.GraphData",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.command.GraphDriver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.command.HealthState",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.HealthStateLog",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.InspectContainerResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.command.InspectContainerResponse$ContainerState",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["com.github.dockerjava.api.command.InspectContainerResponse"] }]
},
{
  "name":"com.github.dockerjava.api.command.InspectContainerResponse$Mount",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.command.InspectContainerResponse$Node",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.InspectExecResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.command.InspectExecResponse$Container",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["com.github.dockerjava.api.command.InspectExecResponse"] }]
},
{
  "name":"com.github.dockerjava.api.command.SyncDockerCmd",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.AccessMode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.AuthConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getAuth","parameterTypes":[] }, 
    {"name":"getEmail","parameterTypes":[] }, 
    {"name":"getIdentitytoken","parameterTypes":[] }, 
    {"name":"getPassword","parameterTypes":[] }, 
    {"name":"getRegistryAddress","parameterTypes":[] }, 
    {"name":"getRegistrytoken","parameterTypes":[] }, 
    {"name":"getStackOrchestrator","parameterTypes":[] }, 
    {"name":"getUsername","parameterTypes":[] }
  ]
},
{
  "name":"com.github.dockerjava.api.model.Bind",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.BindOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.BindPropagation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.Binds",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"fromPrimitive","parameterTypes":["java.lang.String[]"] }, 
    {"name":"toPrimitive","parameterTypes":[] }
  ]
},
{
  "name":"com.github.dockerjava.api.model.BlkioRateDevice",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.BlkioWeightDevice",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Capability",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.ClusterInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.ContainerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.model.ContainerNetwork",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.model.ContainerNetwork$Ipam",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Device",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.DeviceRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.DockerObject",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getRawValues","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.model.Driver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.ExposedPort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.ExposedPorts",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"fromPrimitive","parameterTypes":["java.util.Map"] }, 
    {"name":"toPrimitive","parameterTypes":[] }
  ]
},
{
  "name":"com.github.dockerjava.api.model.ExternalCA",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.ExternalCAProtocol",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.HealthCheck",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.HostConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getAutoRemove","parameterTypes":[] }, 
    {"name":"getBlkioDeviceReadBps","parameterTypes":[] }, 
    {"name":"getBlkioDeviceReadIOps","parameterTypes":[] }, 
    {"name":"getBlkioDeviceWriteBps","parameterTypes":[] }, 
    {"name":"getBlkioDeviceWriteIOps","parameterTypes":[] }, 
    {"name":"getBlkioWeight","parameterTypes":[] }, 
    {"name":"getBlkioWeightDevice","parameterTypes":[] }, 
    {"name":"getCapAdd","parameterTypes":[] }, 
    {"name":"getCapDrop","parameterTypes":[] }, 
    {"name":"getCgroup","parameterTypes":[] }, 
    {"name":"getCgroupParent","parameterTypes":[] }, 
    {"name":"getCgroupnsMode","parameterTypes":[] }, 
    {"name":"getConsoleSize","parameterTypes":[] }, 
    {"name":"getContainerIDFile","parameterTypes":[] }, 
    {"name":"getCpuCount","parameterTypes":[] }, 
    {"name":"getCpuPercent","parameterTypes":[] }, 
    {"name":"getCpuPeriod","parameterTypes":[] }, 
    {"name":"getCpuQuota","parameterTypes":[] }, 
    {"name":"getCpuRealtimePeriod","parameterTypes":[] }, 
    {"name":"getCpuRealtimeRuntime","parameterTypes":[] }, 
    {"name":"getCpuShares","parameterTypes":[] }, 
    {"name":"getCpusetCpus","parameterTypes":[] }, 
    {"name":"getCpusetMems","parameterTypes":[] }, 
    {"name":"getDeviceCgroupRules","parameterTypes":[] }, 
    {"name":"getDeviceRequests","parameterTypes":[] }, 
    {"name":"getDevices","parameterTypes":[] }, 
    {"name":"getDiskQuota","parameterTypes":[] }, 
    {"name":"getDns","parameterTypes":[] }, 
    {"name":"getDnsOptions","parameterTypes":[] }, 
    {"name":"getDnsSearch","parameterTypes":[] }, 
    {"name":"getExtraHosts","parameterTypes":[] }, 
    {"name":"getGroupAdd","parameterTypes":[] }, 
    {"name":"getInit","parameterTypes":[] }, 
    {"name":"getIoMaximumBandwidth","parameterTypes":[] }, 
    {"name":"getIoMaximumIOps","parameterTypes":[] }, 
    {"name":"getIpcMode","parameterTypes":[] }, 
    {"name":"getIsolation","parameterTypes":[] }, 
    {"name":"getKernelMemory","parameterTypes":[] }, 
    {"name":"getLxcConf","parameterTypes":[] }, 
    {"name":"getMemory","parameterTypes":[] }, 
    {"name":"getMemoryReservation","parameterTypes":[] }, 
    {"name":"getMemorySwap","parameterTypes":[] }, 
    {"name":"getMemorySwappiness","parameterTypes":[] }, 
    {"name":"getMounts","parameterTypes":[] }, 
    {"name":"getNanoCPUs","parameterTypes":[] }, 
    {"name":"getNetworkMode","parameterTypes":[] }, 
    {"name":"getOomKillDisable","parameterTypes":[] }, 
    {"name":"getOomScoreAdj","parameterTypes":[] }, 
    {"name":"getPidMode","parameterTypes":[] }, 
    {"name":"getPidsLimit","parameterTypes":[] }, 
    {"name":"getPortBindings","parameterTypes":[] }, 
    {"name":"getPrivileged","parameterTypes":[] }, 
    {"name":"getPublishAllPorts","parameterTypes":[] }, 
    {"name":"getReadonlyRootfs","parameterTypes":[] }, 
    {"name":"getRestartPolicy","parameterTypes":[] }, 
    {"name":"getRuntime","parameterTypes":[] }, 
    {"name":"getSecurityOpts","parameterTypes":[] }, 
    {"name":"getShmSize","parameterTypes":[] }, 
    {"name":"getStorageOpt","parameterTypes":[] }, 
    {"name":"getSysctls","parameterTypes":[] }, 
    {"name":"getTmpFs","parameterTypes":[] }, 
    {"name":"getUlimits","parameterTypes":[] }, 
    {"name":"getUsernsMode","parameterTypes":[] }, 
    {"name":"getUtSMode","parameterTypes":[] }, 
    {"name":"getVolumeDriver","parameterTypes":[] }, 
    {"name":"getVolumesFrom","parameterTypes":[] }
  ]
},
{
  "name":"com.github.dockerjava.api.model.Image",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.model.Info",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.model.InfoRegistryConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.model.InternetProtocol",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.Isolation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.github.dockerjava.api.model.Link",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Links",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"toPrimitive","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.model.LocalNodeState",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"forValue","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.github.dockerjava.api.model.LogConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setType","parameterTypes":["com.github.dockerjava.api.model.LogConfig$LoggingType"] }
  ]
},
{
  "name":"com.github.dockerjava.api.model.LogConfig$LoggingType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.github.dockerjava.api.model.LxcConf",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Mount",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.MountType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.NetworkSettings",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.model.PeerNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Ports",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"fromPrimitive","parameterTypes":["java.util.Map"] }, 
    {"name":"toPrimitive","parameterTypes":[] }
  ]
},
{
  "name":"com.github.dockerjava.api.model.Ports$Binding",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.PropagationMode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.ResourceVersion",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.RestartPolicy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.model.SELContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.SwarmCAConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.SwarmDispatcherConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.SwarmInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.model.SwarmOrchestration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.SwarmRaftConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.SwarmSpec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.TaskDefaults",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.TmpfsOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Ulimit",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Version",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.model.VersionComponent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.model.VersionPlatform",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.model.Volume",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.github.dockerjava.api.model.VolumeBind",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.VolumeBinds",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.VolumeOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.VolumeRW",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Volumes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"toPrimitive","parameterTypes":[] }]
},
{
  "name":"com.github.dockerjava.api.model.VolumesFrom",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.VolumesRW",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.google.common.base$Optional"
},
{
  "name":"com.google.common.base.Optional"
},
{
  "name":"com.google.gson$Gson"
},
{
  "name":"com.google.gson.Gson"
},
{
  "name":"com.jayway.jsonpath.DocumentContext"
},
{
  "name":"com.querydsl.core.types$Predicate"
},
{
  "name":"com.querydsl.core.types.Predicate"
},
{
  "name":"com.rometools.rome.feed.WireFeed"
},
{
  "name":"com.samskivert.mustache$Template"
},
{
  "name":"com.samskivert.mustache.Template"
},
{
  "name":"com.sun.crypto.provider.AESCipher$General",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ARCFOURCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESedeCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.GaloisCounterMode$AESGCM",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"freemarker.template$Configuration"
},
{
  "name":"freemarker.template.Configuration"
},
{
  "name":"groovy.lang.GroovySystem"
},
{
  "name":"groovy.text$TemplateEngine"
},
{
  "name":"groovy.text.TemplateEngine"
},
{
  "name":"io.lettuce.core.resource.ClientResources",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.lettuce.core.resource.DefaultClientResources",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"addressResolverGroup","parameterTypes":[] }, 
    {"name":"builder","parameterTypes":[] }, 
    {"name":"commandLatencyPublisherOptions","parameterTypes":[] }, 
    {"name":"commandLatencyRecorder","parameterTypes":[] }, 
    {"name":"computationThreadPoolSize","parameterTypes":[] }, 
    {"name":"create","parameterTypes":[] }, 
    {"name":"dnsResolver","parameterTypes":[] }, 
    {"name":"eventBus","parameterTypes":[] }, 
    {"name":"eventExecutorGroup","parameterTypes":[] }, 
    {"name":"eventLoopGroupProvider","parameterTypes":[] }, 
    {"name":"ioThreadPoolSize","parameterTypes":[] }, 
    {"name":"mutate","parameterTypes":[] }, 
    {"name":"nettyCustomizer","parameterTypes":[] }, 
    {"name":"reconnectDelay","parameterTypes":[] }, 
    {"name":"shutdown","parameterTypes":[] }, 
    {"name":"shutdown","parameterTypes":["long","long","java.util.concurrent.TimeUnit"] }, 
    {"name":"socketAddressResolver","parameterTypes":[] }, 
    {"name":"timer","parameterTypes":[] }, 
    {"name":"tracing","parameterTypes":[] }
  ]
},
{
  "name":"io.micrometer.common.lang.NonNullApi",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.common.lang.NonNullFields",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.common.lang.Nullable",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.core.instrument.Clock",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.Clock$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"monotonicTime","parameterTypes":[] }, 
    {"name":"wallTime","parameterTypes":[] }
  ]
},
{
  "name":"io.micrometer.core.instrument.MeterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"clear","parameterTypes":[] }, 
    {"name":"close","parameterTypes":[] }, 
    {"name":"config","parameterTypes":[] }, 
    {"name":"counter","parameterTypes":["java.lang.String","java.lang.Iterable"] }, 
    {"name":"counter","parameterTypes":["java.lang.String","java.lang.String[]"] }, 
    {"name":"find","parameterTypes":["java.lang.String"] }, 
    {"name":"forEachMeter","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Iterable","java.lang.Number"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Iterable","java.lang.Object","java.util.function.ToDoubleFunction"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Number"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Object","java.util.function.ToDoubleFunction"] }, 
    {"name":"gaugeCollectionSize","parameterTypes":["java.lang.String","java.lang.Iterable","java.util.Collection"] }, 
    {"name":"gaugeMapSize","parameterTypes":["java.lang.String","java.lang.Iterable","java.util.Map"] }, 
    {"name":"get","parameterTypes":["java.lang.String"] }, 
    {"name":"getMeters","parameterTypes":[] }, 
    {"name":"isClosed","parameterTypes":[] }, 
    {"name":"more","parameterTypes":[] }, 
    {"name":"remove","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"remove","parameterTypes":["io.micrometer.core.instrument.Meter"] }, 
    {"name":"removeByPreFilterId","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"summary","parameterTypes":["java.lang.String","java.lang.Iterable"] }, 
    {"name":"summary","parameterTypes":["java.lang.String","java.lang.String[]"] }, 
    {"name":"timer","parameterTypes":["java.lang.String","java.lang.Iterable"] }, 
    {"name":"timer","parameterTypes":["java.lang.String","java.lang.String[]"] }
  ]
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"map","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }]
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter$9",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"accept","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"configure","parameterTypes":["io.micrometer.core.instrument.Meter$Id","io.micrometer.core.instrument.distribution.DistributionStatisticConfig"] }
  ]
},
{
  "name":"io.micrometer.core.instrument.config.MeterRegistryConfig",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"requireValid","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.observation.DefaultMeterObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"onEvent","parameterTypes":["io.micrometer.observation.Observation$Event","io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }
  ]
},
{
  "name":"io.micrometer.core.instrument.observation.MeterObservationHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"io.micrometer.core.instrument.simple.SimpleConfig",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"validate","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.simple.SimpleMeterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.observation.ObservationHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"onError","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onScopeClosed","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onScopeOpened","parameterTypes":["io.micrometer.observation.Observation$Context"] }
  ]
},
{
  "name":"io.micrometer.observation.ObservationRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.observation.SimpleObservationRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getCurrentObservation","parameterTypes":[] }, 
    {"name":"getCurrentObservationScope","parameterTypes":[] }, 
    {"name":"isNoop","parameterTypes":[] }, 
    {"name":"observationConfig","parameterTypes":[] }, 
    {"name":"setCurrentObservationScope","parameterTypes":["io.micrometer.observation.Observation$Scope"] }
  ]
},
{
  "name":"io.netty.channel.DefaultFileRegion"
},
{
  "name":"io.netty.channel.epoll.Epoll"
},
{
  "name":"io.netty.channel.epoll.EpollDatagramChannel",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.netty.channel.epoll.EpollSocketChannel",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
},
{
  "name":"io.netty.channel.kqueue.KQueue"
},
{
  "name":"io.netty.channel.unix.DatagramSocketAddress"
},
{
  "name":"io.netty.channel.unix.DomainDatagramSocketAddress"
},
{
  "name":"io.netty.channel.unix.PeerCredentials"
},
{
  "name":"io.netty.incubator.channel.uring.IOUring"
},
{
  "name":"io.netty.resolver.dns.DnsAddressResolverGroup"
},
{
  "name":"io.netty.util.AbstractReferenceCounted",
  "fields":[{"name":"refCnt"}]
},
{
  "name":"io.netty.util.internal.NativeLibraryUtil",
  "methods":[{"name":"loadLibrary","parameterTypes":["java.lang.String","boolean"] }]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.reactivex.rxjava3.core$Flowable"
},
{
  "name":"io.reactivex.rxjava3.core.Flowable"
},
{
  "name":"io.smallrye.mutiny$Multi"
},
{
  "name":"io.smallrye.mutiny.Multi"
},
{
  "name":"io.vavr.control$Option"
},
{
  "name":"io.vavr.control$Try"
},
{
  "name":"io.vavr.control.Option"
},
{
  "name":"io.vavr.control.Try"
},
{
  "name":"jakarta.ejb$TransactionAttribute"
},
{
  "name":"jakarta.ejb.EJB"
},
{
  "name":"jakarta.ejb.TransactionAttribute"
},
{
  "name":"jakarta.faces.context$FacesContext"
},
{
  "name":"jakarta.faces.context.FacesContext"
},
{
  "name":"jakarta.inject$Provider"
},
{
  "name":"jakarta.inject$Qualifier"
},
{
  "name":"jakarta.inject.Provider"
},
{
  "name":"jakarta.inject.Qualifier"
},
{
  "name":"jakarta.json.bind$Jsonb"
},
{
  "name":"jakarta.json.bind.Jsonb"
},
{
  "name":"jakarta.persistence.PersistenceContext"
},
{
  "name":"jakarta.servlet.Filter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"init","parameterTypes":["jakarta.servlet.FilterConfig"] }
  ]
},
{
  "name":"jakarta.servlet.GenericFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.servlet.GenericServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getInitParameter","parameterTypes":["java.lang.String"] }, 
    {"name":"getInitParameterNames","parameterTypes":[] }, 
    {"name":"getServletConfig","parameterTypes":[] }, 
    {"name":"getServletContext","parameterTypes":[] }, 
    {"name":"getServletInfo","parameterTypes":[] }, 
    {"name":"log","parameterTypes":["java.lang.String"] }, 
    {"name":"log","parameterTypes":["java.lang.String","java.lang.Throwable"] }
  ]
},
{
  "name":"jakarta.servlet.MultipartConfigElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.servlet.Servlet",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.ServletConfig",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.http.HttpServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"init","parameterTypes":["jakarta.servlet.ServletConfig"] }, 
    {"name":"service","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse"] }
  ]
},
{
  "name":"jakarta.transaction$Transactional"
},
{
  "name":"jakarta.transaction.Transactional"
},
{
  "name":"jakarta.validation$Validator"
},
{
  "name":"jakarta.validation.Validator"
},
{
  "name":"jakarta.websocket.server.ServerContainer"
},
{
  "name":"jakarta.xml.bind.Binder"
},
{
  "name":"jakarta.xml.ws.WebServiceRef"
},
{
  "name":"java.io.Closeable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.io.FileDescriptor"
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.io.IOException"
},
{
  "name":"java.io.Serializable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.AutoCloseable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Boolean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.Class",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.ClassLoader",
  "methods":[{"name":"defineClass","parameterTypes":["java.lang.String","byte[]","int","int","java.security.ProtectionDomain"] }]
},
{
  "name":"java.lang.Comparable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Enum",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Integer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.Iterable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"forEach","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"spliterator","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.Long",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.Module",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Number",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.OutOfMemoryError"
},
{
  "name":"java.lang.RuntimeException"
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.String",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Throwable",
  "allDeclaredFields":true
},
{
  "name":"java.lang.WrongThreadException"
},
{
  "name":"java.lang.constant.Constable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.constant.ConstantDesc",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.invoke.TypeDescriptor$OfField",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "methods":[{"name":"getInputArguments","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.AnnotatedElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.GenericDeclaration",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.Type",
  "queryAllPublicMethods":true
},
{
  "name":"java.net.InetSocketAddress"
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.PortUnreachableException"
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.URI"
},
{
  "name":"java.net.URI$Parser"
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.net.UnixDomainSocketAddress",
  "methods":[{"name":"of","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.nio.Bits",
  "methods":[{"name":"unaligned","parameterTypes":[] }]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]
},
{
  "name":"java.nio.ByteBuffer",
  "methods":[{"name":"alignedSlice","parameterTypes":["int"] }]
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","int"] }]
},
{
  "name":"java.nio.channels.ClosedChannelException"
},
{
  "name":"java.nio.channels.FileChannel"
},
{
  "name":"java.nio.channels.ServerSocketChannel",
  "methods":[{"name":"open","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.nio.channels.SocketChannel",
  "methods":[{"name":"open","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.security.AlgorithmParametersSpi"
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.KeyStoreSpi"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.time.LocalDateTime"
},
{
  "name":"java.util.ArrayList",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.ArrayList$ArrayListSpliterator"
},
{
  "name":"java.util.EventListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.HashMap",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.LinkedHashMap",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.Map",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.Optional"
},
{
  "name":"java.util.PropertyPermission"
},
{
  "name":"java.util.function.Supplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.logging.LogManager"
},
{
  "name":"java.util.logging.SimpleFormatter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.stream.AbstractPipeline"
},
{
  "name":"java.util.stream.ReferencePipeline$2$1"
},
{
  "name":"java.util.stream.ReferencePipeline$3$1"
},
{
  "name":"java.util.stream.ReferencePipeline$Head"
},
{
  "name":"java.util.stream.StreamSpliterators$WrappingSpliterator"
},
{
  "name":"java.util.stream.Streams$ConcatSpliterator"
},
{
  "name":"javax.annotation.Nonnull",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.annotation.Nullable",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.annotation.meta.TypeQualifier",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.annotation.meta.TypeQualifierDefault",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.money$MonetaryAmount"
},
{
  "name":"javax.money.MonetaryAmount"
},
{
  "name":"javax.naming.InitialContext"
},
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "methods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]
},
{
  "name":"javax.smartcardio.CardPermission"
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"jdk.jfr.Event"
},
{
  "name":"kotlin.KotlinVersion",
  "fields":[{"name":"CURRENT"}]
},
{
  "name":"kotlin.Metadata"
},
{
  "name":"kotlin.coroutines.Continuation"
},
{
  "name":"kotlin.reflect.full$KClasses"
},
{
  "name":"kotlin.reflect.full.KClasses"
},
{
  "name":"kotlinx.coroutines.reactor$MonoKt"
},
{
  "name":"kotlinx.coroutines.reactor.MonoKt"
},
{
  "name":"kotlinx.serialization.cbor$Cbor"
},
{
  "name":"kotlinx.serialization.cbor.Cbor"
},
{
  "name":"kotlinx.serialization.json$Json"
},
{
  "name":"kotlinx.serialization.json.Json"
},
{
  "name":"kotlinx.serialization.protobuf$ProtoBuf"
},
{
  "name":"kotlinx.serialization.protobuf.ProtoBuf"
},
{
  "name":"okhttp3.OkHttpClient"
},
{
  "name":"org.HdrHistogram.Histogram"
},
{
  "name":"org.LatencyUtils.PauseDetector"
},
{
  "name":"org.apache.catalina.util.CharsetMapper",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.commons.pool2$ObjectPool"
},
{
  "name":"org.apache.commons.pool2.ObjectPool"
},
{
  "name":"org.apache.coyote.AbstractProtocol",
  "methods":[
    {"name":"getAddress","parameterTypes":[] }, 
    {"name":"getNameIndex","parameterTypes":[] }, 
    {"name":"setPort","parameterTypes":["int"] }, 
    {"name":"setProperty","parameterTypes":["java.lang.String","java.lang.String"] }
  ]
},
{
  "name":"org.apache.coyote.http11.AbstractHttp11Protocol",
  "methods":[
    {"name":"isSSLEnabled","parameterTypes":[] }, 
    {"name":"setSecure","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.apache.coyote.http11.Http11NioProtocol",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient"
},
{
  "name":"org.apache.hc.client5.http.impl.classic.HttpClientBuilder"
},
{
  "name":"org.apache.hc.core5.reactive$ReactiveDataConsumer"
},
{
  "name":"org.apache.hc.core5.reactive.ReactiveDataConsumer"
},
{
  "name":"org.apache.jasper.compiler$JspConfig"
},
{
  "name":"org.apache.jasper.compiler.JspConfig"
},
{
  "name":"org.apache.jasper.servlet$JspServlet"
},
{
  "name":"org.apache.jasper.servlet.JspServlet"
},
{
  "name":"org.apache.logging.log4j.core.impl$Log4jContextFactory"
},
{
  "name":"org.apache.logging.log4j.core.impl.Log4jContextFactory"
},
{
  "name":"org.apache.logging.log4j.spi.ExtendedLogger"
},
{
  "name":"org.apache.logging.slf4j.SLF4JProvider"
},
{
  "name":"org.apache.maven.surefire.booter.ForkedBooter"
},
{
  "name":"org.apache.maven.surefire.junitplatform.JUnitPlatformProvider",
  "methods":[{"name":"<init>","parameterTypes":["org.apache.maven.surefire.providerapi.ProviderParameters"] }]
},
{
  "name":"org.apache.tomcat.util.net.AbstractEndpoint",
  "methods":[{"name":"setBindOnInit","parameterTypes":["boolean"] }]
},
{
  "name":"org.apache.tomcat.util.net.NioEndpoint",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.tomcat.websocket.server.WsFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apiguardian.api.API",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.collections.api.list$ImmutableList"
},
{
  "name":"org.eclipse.collections.api.list.ImmutableList"
},
{
  "name":"org.eclipse.core.runtime$FileLocator"
},
{
  "name":"org.eclipse.core.runtime.FileLocator"
},
{
  "name":"org.eclipse.jetty.client$HttpClient"
},
{
  "name":"org.eclipse.jetty.client.HttpClient"
},
{
  "name":"org.elasticsearch.client.RestClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }]
},
{
  "name":"org.graalvm.nativeimage.ImageInfo",
  "methods":[{"name":"inImageCode","parameterTypes":[] }]
},
{
  "name":"org.jboss.logging$Logger"
},
{
  "name":"org.jboss.logging.Logger"
},
{
  "name":"org.jmolecules.ddd.annotation$Identity"
},
{
  "name":"org.jmolecules.ddd.annotation.Identity"
},
{
  "name":"org.jmolecules.ddd.types$Association"
},
{
  "name":"org.jmolecules.ddd.types.Association"
},
{
  "name":"org.jmolecules.spring$IdentifierToPrimitivesConverter"
},
{
  "name":"org.jmolecules.spring.IdentifierToPrimitivesConverter"
},
{
  "name":"org.jruby.runtime.Constants"
},
{
  "name":"org.junit.internal.AssumptionViolatedException"
},
{
  "name":"org.junit.jupiter.api.AfterAll",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.junit.jupiter.api.BeforeAll",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.junit.jupiter.api.Test",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.junit.jupiter.api.Timeout",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.junit.jupiter.api.extension.ExtendWith",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor"
},
{
  "name":"org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor"
},
{
  "name":"org.junit.jupiter.engine.execution.TestInstancesProvider"
},
{
  "name":"org.junit.platform.commons.annotation.Testable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine"
},
{
  "name":"org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor"
},
{
  "name":"org.junit.platform.engine.support.hierarchical.Node"
},
{
  "name":"org.junit.platform.engine.support.hierarchical.NodeTestTask"
},
{
  "name":"org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService"
},
{
  "name":"org.junit.platform.engine.support.hierarchical.ThrowableCollector"
},
{
  "name":"org.junit.platform.launcher.core.DefaultLauncher"
},
{
  "name":"org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher"
},
{
  "name":"org.junit.platform.launcher.core.EngineExecutionOrchestrator"
},
{
  "name":"org.junit.platform.launcher.core.SessionPerRequestLauncher"
},
{
  "name":"org.mockito.MockSettings"
},
{
  "name":"org.openqa.selenium$WebDriver"
},
{
  "name":"org.openqa.selenium.WebDriver"
},
{
  "name":"org.reactivestreams.Publisher"
},
{
  "name":"org.slf4j.Logger"
},
{
  "name":"org.slf4j.bridge.SLF4JBridgeHandler"
},
{
  "name":"org.slf4j.spi.LocationAwareLogger"
},
{
  "name":"org.springframework.aop.TargetClassAware",
  "methods":[{"name":"getTargetClass","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.framework.Advised",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"isFrozen","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.framework.AopInfrastructureBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.framework.ProxyConfig",
  "allDeclaredFields":true,
  "methods":[{"name":"setProxyTargetClass","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.aop.framework.ProxyProcessorSupport",
  "allDeclaredFields":true,
  "methods":[{"name":"setOrder","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aot.hint.annotation.Reflective",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.Aware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanClassLoaderAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanFactoryAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanNameAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.DisposableBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.FactoryBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"isSingleton","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.InitializingBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.SmartInitializingSingleton",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Autowired",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Qualifier",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Value",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.aot.BeanInstanceSupplier"
},
{
  "name":"org.springframework.beans.factory.config.BeanPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory"
},
{
  "name":"org.springframework.beans.factory.support.AbstractBeanFactory"
},
{
  "name":"org.springframework.beans.factory.support.DefaultListableBeanFactory"
},
{
  "name":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry"
},
{
  "name":"org.springframework.beans.factory.support.NullBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.ClearCachesApplicationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.SpringApplication",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setAllowBeanDefinitionOverriding","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.SpringBootConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.data.elasticsearch.ElasticsearchReactiveHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.data.redis.RedisReactiveHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"match","parameterTypes":["org.springframework.boot.actuate.endpoint.ExposableEndpoint"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getRootPath","parameterTypes":["org.springframework.boot.actuate.endpoint.EndpointId"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration$EndpointObjectMapperWebMvcConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"configureMessageConverters","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AbstractCompositeHealthContributorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"get","parameterTypes":["java.lang.String"] }, 
    {"name":"getNames","parameterTypes":[] }, 
    {"name":"getPrimary","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.CompositeReactiveHealthContributorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getShowDetails","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getRoles","parameterTypes":[] }, 
    {"name":"getShowComponents","parameterTypes":[] }, 
    {"name":"getStatus","parameterTypes":[] }, 
    {"name":"setRoles","parameterTypes":["java.util.Set"] }, 
    {"name":"setShowComponents","parameterTypes":["org.springframework.boot.actuate.endpoint.Show"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration$KafkaStreamsMetricsConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterSingletonsInstantiated","parameterTypes":[] }, 
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"accept","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"configure","parameterTypes":["io.micrometer.core.instrument.Meter$Id","io.micrometer.core.instrument.distribution.DistributionStatisticConfig"] }, 
    {"name":"map","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.ValidationFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.data.MetricsRepositoryMethodInvocationListenerBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setEnabled","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimplePropertiesConfigAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"get","parameterTypes":["java.lang.String"] }, 
    {"name":"mode","parameterTypes":[] }, 
    {"name":"prefix","parameterTypes":[] }, 
    {"name":"step","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.redis.LettuceMetricsAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MetricsWithTracingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties","org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration$MvcRequestMatcherConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.ConditionalOnEnabledTracing",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration$ServletHttpExchangesConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.data.elasticsearch.ElasticsearchReactiveHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.data.redis.RedisReactiveHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointsSupplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Endpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointConverter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"createOperationKey","parameterTypes":["org.springframework.boot.actuate.endpoint.Operation"] }, 
    {"name":"getEndpoints","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointExtension",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.ReadOperation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Selector",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"mapParameterValue","parameterTypes":["org.springframework.boot.actuate.endpoint.invoke.OperationParameter","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"apply","parameterTypes":["org.springframework.boot.actuate.endpoint.EndpointId","org.springframework.boot.actuate.endpoint.OperationType","org.springframework.boot.actuate.endpoint.invoke.OperationParameters","org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"onStartup","parameterTypes":["jakarta.servlet.ServletContext"] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getEndpoints","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$LinksHandler",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AdditionalHealthEndpointPathsWebMvcHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping$WebMvcLinksHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.AbstractHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"health","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.AbstractReactiveHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"health","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.ContributorRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.DefaultContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getContributor","parameterTypes":["java.lang.String"] }, 
    {"name":"iterator","parameterTypes":[] }, 
    {"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"unregisterContributor","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.health.HealthContributor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthContributorRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointGroups",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"get","parameterTypes":["org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"] }, 
    {"name":"getAllWithAdditionalPath","parameterTypes":["org.springframework.boot.actuate.endpoint.web.WebServerNamespace"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getHealth","parameterTypes":["java.lang.Object","boolean"] }]
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthIndicator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getHealth","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.actuate.health.HttpCodeStatusMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.NamedContributors",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"stream","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.PingHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthContributor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthIndicator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getHealth","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getStatusCode","parameterTypes":["org.springframework.boot.actuate.health.Status"] }]
},
{
  "name":"org.springframework.boot.actuate.health.SimpleStatusAggregator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getAggregateStatus","parameterTypes":["java.util.Set"] }]
},
{
  "name":"org.springframework.boot.actuate.health.StatusAggregator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getAggregateStatus","parameterTypes":["org.springframework.boot.actuate.health.Status[]"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.data.DefaultRepositoryTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"repositoryTags","parameterTypes":["org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterInvocation","parameterTypes":["org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, 
    {"name":"supportsEventType","parameterTypes":["java.lang.Class"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.web.exchanges.InMemoryHttpExchangeRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"add","parameterTypes":["org.springframework.boot.actuate.web.exchanges.HttpExchange"] }, 
    {"name":"findAll","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.web.exchanges.servlet.HttpExchangesFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackage",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureAfter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureBefore",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureOrder",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.BackgroundPreinitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.EnableAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.SpringBootApplication",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataConfiguration$ReactiveRestClientConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.data.redis.RedisProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisConnectionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getCluster","parameterTypes":[] }, 
    {"name":"getJedis","parameterTypes":[] }, 
    {"name":"getLettuce","parameterTypes":[] }, 
    {"name":"setClientType","parameterTypes":["org.springframework.boot.autoconfigure.data.redis.RedisProperties$ClientType"] }, 
    {"name":"setCluster","parameterTypes":["org.springframework.boot.autoconfigure.data.redis.RedisProperties$Cluster"] }, 
    {"name":"setSsl","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$Cluster",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getNodes","parameterTypes":[] }, 
    {"name":"setNodes","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$Jedis",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getPool","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getPool","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"setEnabled","parameterTypes":["java.lang.Boolean"] }, 
    {"name":"setMaxActive","parameterTypes":["int"] }, 
    {"name":"setMaxIdle","parameterTypes":["int"] }, 
    {"name":"setMaxWait","parameterTypes":["java.time.Duration"] }, 
    {"name":"setMinIdle","parameterTypes":["int"] }, 
    {"name":"setTimeBetweenEvictionRuns","parameterTypes":["java.time.Duration"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientConfigurations$ElasticsearchTransportConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientConfigurations$JacksonJsonpMapperConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientConfigurations$RestClientBuilderConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ReactiveElasticsearchClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.flyway$FlywayMigrationScriptMissingFailureAnalyzer"
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingFailureAnalyzer"
},
{
  "name":"org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConverters",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"iterator","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"customize","parameterTypes":["org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer",
  "queryAllPublicConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jooq.NoDslContextBeanFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.MissingR2dbcPoolDependencyFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.MultipleConnectionPoolConfigurationsFailureAnalzyer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.NoConnectionFactoryBeanFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getJwt","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setJwkSetUri","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerJwtConfiguration$JwtDecoderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$WebSecurityEnablerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getHttp2","parameterTypes":[] }, 
    {"name":"setPort","parameterTypes":["java.lang.Integer"] }, 
    {"name":"setShutdown","parameterTypes":["org.springframework.boot.web.server.Shutdown"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.format.WebConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$ReactorNetty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getPrefix","parameterTypes":[] }, 
    {"name":"getRelativePath","parameterTypes":["java.lang.String"] }, 
    {"name":"getServletUrlMapping","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addUrlMappings","parameterTypes":["java.lang.String[]"] }, 
    {"name":"getPath","parameterTypes":[] }, 
    {"name":"setUrlMappings","parameterTypes":["java.util.Collection"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties","org.springframework.boot.autoconfigure.web.WebProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ListableBeanFactory"] }, 
    {"name":"flashMapManager","parameterTypes":[] }, 
    {"name":"localeResolver","parameterTypes":[] }, 
    {"name":"mvcContentNegotiationManager","parameterTypes":[] }, 
    {"name":"mvcConversionService","parameterTypes":[] }, 
    {"name":"mvcValidator","parameterTypes":[] }, 
    {"name":"requestMappingHandlerAdapter","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.validation.Validator"] }, 
    {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }, 
    {"name":"themeResolver","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.WebProperties","org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties","org.springframework.beans.factory.ListableBeanFactory","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, 
    {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"] }, 
    {"name":"configureAsyncSupport","parameterTypes":["org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"] }, 
    {"name":"configureContentNegotiation","parameterTypes":["org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"] }, 
    {"name":"configureMessageConverters","parameterTypes":["java.util.List"] }, 
    {"name":"configurePathMatch","parameterTypes":["org.springframework.web.servlet.config.annotation.PathMatchConfigurer"] }, 
    {"name":"getMessageCodesResolver","parameterTypes":[] }, 
    {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"registerErrorPages","parameterTypes":["org.springframework.boot.web.server.ErrorPageRegistry"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.builder.ParentContextCloserApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.ContextIdApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.FileEncodingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.AnsiOutputApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.ConfigurableBootstrapContext"] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataProperties",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.List","org.springframework.boot.context.config.ConfigDataProperties$Activate"] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataProperties$Activate",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.cloud.CloudPlatform","java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLocationResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.context.properties.bind.Binder","org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.context.event.EventPublishingRunListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.SpringApplication","java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.context.logging.LoggingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.BoundConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationProperties",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationProperties",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.bind.Name",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.diagnostics.FailureAnalyzers",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.ConfigurableApplicationContext"] }]
},
{
  "name":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer",
  "queryAllPublicConstructors":true
},
{
  "name":"org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.PropertiesPropertySourceLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.YamlPropertySourceLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jackson.JsonComponentModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }
  ]
},
{
  "name":"org.springframework.boot.jackson.JsonMixinModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.jackson.JsonMixinModuleEntries",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.liquibase.LiquibaseChangelogMissingFailureAnalyzer",
  "queryAllPublicConstructors":true
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.logging.logback.ColorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.autoconfigure.ConditionReportApplicationContextFailureProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizerFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizerFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.context.ImportsContextCustomizerFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.context.SpringBootContextLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook"
},
{
  "name":"org.springframework.boot.test.context.SpringBootTest",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.context.TestComponent",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.test.context.TestConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizerFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.graphql.tester.HttpGraphQlTesterContextCustomizerFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.mock.mockito.MockitoContextCustomizerFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.mock.mockito.MockitoPostProcessor",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.Set"] }]
},
{
  "name":"org.springframework.boot.test.mock.mockito.MockitoPostProcessor$SpyPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.test.mock.mockito.MockitoPostProcessor"] }]
},
{
  "name":"org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.web.SpringBootTestRandomPortEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.web.client.TestRestTemplateContextCustomizerFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer__TestContext001_BeanDefinitions",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizerFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.context.MissingWebServerFactoryBeanFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.ConnectorStartFailureAnalyzer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addConnectorCustomizers","parameterTypes":["org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer[]"] }, 
    {"name":"addContextCustomizers","parameterTypes":["org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer[]"] }, 
    {"name":"addEngineValves","parameterTypes":["org.apache.catalina.Valve[]"] }, 
    {"name":"addProtocolHandlerCustomizers","parameterTypes":["org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer[]"] }, 
    {"name":"getWebServer","parameterTypes":["org.springframework.boot.web.servlet.ServletContextInitializer[]"] }, 
    {"name":"setBackgroundProcessorDelay","parameterTypes":["int"] }, 
    {"name":"setBaseDirectory","parameterTypes":["java.io.File"] }, 
    {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }, 
    {"name":"setUriEncoding","parameterTypes":["java.nio.charset.Charset"] }
  ]
},
{
  "name":"org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addErrorPages","parameterTypes":["org.springframework.boot.web.server.ErrorPage[]"] }, 
    {"name":"getAddress","parameterTypes":[] }, 
    {"name":"getCompression","parameterTypes":[] }, 
    {"name":"getErrorPages","parameterTypes":[] }, 
    {"name":"getHttp2","parameterTypes":[] }, 
    {"name":"getOrCreateSslStoreProvider","parameterTypes":[] }, 
    {"name":"getPort","parameterTypes":[] }, 
    {"name":"getServerHeader","parameterTypes":[] }, 
    {"name":"getShutdown","parameterTypes":[] }, 
    {"name":"getSsl","parameterTypes":[] }, 
    {"name":"getSslStoreProvider","parameterTypes":[] }, 
    {"name":"setAddress","parameterTypes":["java.net.InetAddress"] }, 
    {"name":"setCompression","parameterTypes":["org.springframework.boot.web.server.Compression"] }, 
    {"name":"setErrorPages","parameterTypes":["java.util.Set"] }, 
    {"name":"setHttp2","parameterTypes":["org.springframework.boot.web.server.Http2"] }, 
    {"name":"setPort","parameterTypes":["int"] }, 
    {"name":"setServerHeader","parameterTypes":["java.lang.String"] }, 
    {"name":"setShutdown","parameterTypes":["org.springframework.boot.web.server.Shutdown"] }, 
    {"name":"setSsl","parameterTypes":["org.springframework.boot.web.server.Ssl"] }, 
    {"name":"setSslStoreProvider","parameterTypes":["org.springframework.boot.web.server.SslStoreProvider"] }
  ]
},
{
  "name":"org.springframework.boot.web.server.ConfigurableWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistrar",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
  "allDeclaredFields":true
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.Http2",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setEnabled","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.web.server.WebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
  "allDeclaredFields":true
},
{
  "name":"org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addServletNames","parameterTypes":["java.lang.String[]"] }, 
    {"name":"addServletRegistrationBeans","parameterTypes":["org.springframework.boot.web.servlet.ServletRegistrationBean[]"] }, 
    {"name":"addUrlPatterns","parameterTypes":["java.lang.String[]"] }, 
    {"name":"getServletNames","parameterTypes":[] }, 
    {"name":"getServletRegistrationBeans","parameterTypes":[] }, 
    {"name":"getUrlPatterns","parameterTypes":[] }, 
    {"name":"isMatchAfter","parameterTypes":[] }, 
    {"name":"setDispatcherTypes","parameterTypes":["jakarta.servlet.DispatcherType","jakarta.servlet.DispatcherType[]"] }, 
    {"name":"setDispatcherTypes","parameterTypes":["java.util.EnumSet"] }, 
    {"name":"setMatchAfter","parameterTypes":["boolean"] }, 
    {"name":"setServletNames","parameterTypes":["java.util.Collection"] }, 
    {"name":"setServletRegistrationBeans","parameterTypes":["java.util.Collection"] }, 
    {"name":"setUrlPatterns","parameterTypes":["java.util.Collection"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getFilter","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.DynamicRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addInitParameter","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"configure","parameterTypes":["jakarta.servlet.Registration$Dynamic"] }, 
    {"name":"getInitParameters","parameterTypes":[] }, 
    {"name":"isAsyncSupported","parameterTypes":[] }, 
    {"name":"setAsyncSupported","parameterTypes":["boolean"] }, 
    {"name":"setInitParameters","parameterTypes":["java.util.Map"] }, 
    {"name":"setName","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.FilterRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getFilter","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.RegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"isEnabled","parameterTypes":[] }, 
    {"name":"onStartup","parameterTypes":["jakarta.servlet.ServletContext"] }, 
    {"name":"setEnabled","parameterTypes":["boolean"] }, 
    {"name":"setOrder","parameterTypes":["int"] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.ServletContextInitializer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.ServletRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getMultipartConfig","parameterTypes":[] }, 
    {"name":"getServlet","parameterTypes":[] }, 
    {"name":"getServletName","parameterTypes":[] }, 
    {"name":"getUrlMappings","parameterTypes":[] }, 
    {"name":"setLoadOnStartup","parameterTypes":["int"] }, 
    {"name":"setMultipartConfig","parameterTypes":["jakarta.servlet.MultipartConfigElement"] }, 
    {"name":"setServlet","parameterTypes":["jakarta.servlet.Servlet"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.WebListenerRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
},
{
  "name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.error.ErrorController",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addCookieSameSiteSuppliers","parameterTypes":["org.springframework.boot.web.servlet.server.CookieSameSiteSupplier[]"] }, 
    {"name":"addInitializers","parameterTypes":["org.springframework.boot.web.servlet.ServletContextInitializer[]"] }, 
    {"name":"addWebListeners","parameterTypes":["java.lang.String[]"] }, 
    {"name":"getContextPath","parameterTypes":[] }, 
    {"name":"getCookieSameSiteSuppliers","parameterTypes":[] }, 
    {"name":"getDisplayName","parameterTypes":[] }, 
    {"name":"getDocumentRoot","parameterTypes":[] }, 
    {"name":"getInitParameters","parameterTypes":[] }, 
    {"name":"getJsp","parameterTypes":[] }, 
    {"name":"getLocaleCharsetMappings","parameterTypes":[] }, 
    {"name":"getMimeMappings","parameterTypes":[] }, 
    {"name":"getSession","parameterTypes":[] }, 
    {"name":"isRegisterDefaultServlet","parameterTypes":[] }, 
    {"name":"setContextPath","parameterTypes":["java.lang.String"] }, 
    {"name":"setCookieSameSiteSuppliers","parameterTypes":["java.util.List"] }, 
    {"name":"setDisplayName","parameterTypes":["java.lang.String"] }, 
    {"name":"setDocumentRoot","parameterTypes":["java.io.File"] }, 
    {"name":"setInitParameters","parameterTypes":["java.util.Map"] }, 
    {"name":"setInitializers","parameterTypes":["java.util.List"] }, 
    {"name":"setJsp","parameterTypes":["org.springframework.boot.web.servlet.server.Jsp"] }, 
    {"name":"setLocaleCharsetMappings","parameterTypes":["java.util.Map"] }, 
    {"name":"setMimeMappings","parameterTypes":["org.springframework.boot.web.server.MimeMappings"] }, 
    {"name":"setRegisterDefaultServlet","parameterTypes":["boolean"] }, 
    {"name":"setSession","parameterTypes":["org.springframework.boot.web.servlet.server.Session"] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.server.Encoding",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.server.ServletWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cglib.proxy.MethodProxy"
},
{
  "name":"org.springframework.context.ApplicationContextAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationEventPublisherAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.EmbeddedValueResolverAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.EnvironmentAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.MessageSourceAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ResourceLoaderAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.Bean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ComponentScan",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ComponentScan$Filter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Conditional",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Configuration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor"
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.DependsOn",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Import",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ImportAware",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.ImportRuntimeHints",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Lazy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Primary",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Role",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Scope",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.event.SmartApplicationListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getListenerId","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"supportsSourceType","parameterTypes":["java.lang.Class"] }
  ]
},
{
  "name":"org.springframework.context.support.AbstractApplicationContext"
},
{
  "name":"org.springframework.context.support.ApplicationObjectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getApplicationContext","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.core.DecoratingProxy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.Ordered",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.annotation.AliasFor",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.annotation.Order",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.convert.ConversionService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.convert.converter.ConverterRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.convert.support.ConfigurableConversionService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.convert.support.GenericConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addConverter","parameterTypes":["java.lang.Class","java.lang.Class","org.springframework.core.convert.converter.Converter"] }, 
    {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.Converter"] }, 
    {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.GenericConverter"] }, 
    {"name":"addConverterFactory","parameterTypes":["org.springframework.core.convert.converter.ConverterFactory"] }, 
    {"name":"canBypassConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"canConvert","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"canConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"convert","parameterTypes":["java.lang.Object","java.lang.Class"] }, 
    {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"removeConvertible","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.core.env.EnvironmentCapable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.io.Resource",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.io.support.PropertiesLoaderSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"setFileEncoding","parameterTypes":["java.lang.String"] }, 
    {"name":"setIgnoreResourceNotFound","parameterTypes":["boolean"] }, 
    {"name":"setLocalOverride","parameterTypes":["boolean"] }, 
    {"name":"setLocation","parameterTypes":["org.springframework.core.io.Resource"] }, 
    {"name":"setLocations","parameterTypes":["org.springframework.core.io.Resource[]"] }, 
    {"name":"setProperties","parameterTypes":["java.util.Properties"] }, 
    {"name":"setPropertiesArray","parameterTypes":["java.util.Properties[]"] }, 
    {"name":"setPropertiesPersister","parameterTypes":["org.springframework.util.PropertiesPersister"] }
  ]
},
{
  "name":"org.springframework.dao.support.PersistenceExceptionTranslator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.annotation.Id",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.annotation.Persistent",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.convert.CustomConversions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getCustomWriteTarget","parameterTypes":["java.lang.Class"] }, 
    {"name":"getCustomWriteTarget","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"getPropertyValueConversions","parameterTypes":[] }, 
    {"name":"getSimpleTypeHolder","parameterTypes":[] }, 
    {"name":"hasCustomReadTarget","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"hasCustomWriteTarget","parameterTypes":["java.lang.Class"] }, 
    {"name":"hasCustomWriteTarget","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"hasValueConverter","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, 
    {"name":"isSimpleType","parameterTypes":["java.lang.Class"] }, 
    {"name":"registerConvertersIn","parameterTypes":["org.springframework.core.convert.converter.ConverterRegistry"] }
  ]
},
{
  "name":"org.springframework.data.convert.EntityConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.convert.EntityReader",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.convert.EntityWriter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.convert.ReadingConverter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.convert.WritingConverter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.annotations.Document",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.annotations.Field",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.client.ClientConfiguration",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.client.DefaultClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getClientConfigurers","parameterTypes":[] }, 
    {"name":"getConnectTimeout","parameterTypes":[] }, 
    {"name":"getDefaultHeaders","parameterTypes":[] }, 
    {"name":"getEndpoints","parameterTypes":[] }, 
    {"name":"getHeadersSupplier","parameterTypes":[] }, 
    {"name":"getHostNameVerifier","parameterTypes":[] }, 
    {"name":"getPathPrefix","parameterTypes":[] }, 
    {"name":"getProxy","parameterTypes":[] }, 
    {"name":"getSocketTimeout","parameterTypes":[] }, 
    {"name":"getSslContext","parameterTypes":[] }, 
    {"name":"getWebClientConfigurer","parameterTypes":[] }, 
    {"name":"useSsl","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.AutoCloseableElasticsearchClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"close","parameterTypes":[] }, 
    {"name":"cluster","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ElasticsearchConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"elasticsearchClient","parameterTypes":["org.elasticsearch.client.RestClient"] }, 
    {"name":"elasticsearchOperations","parameterTypes":["org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter","co.elastic.clients.elasticsearch.ElasticsearchClient"] }, 
    {"name":"elasticsearchRestClient","parameterTypes":["org.springframework.data.elasticsearch.client.ClientConfiguration"] }, 
    {"name":"transportOptions","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"bulkUpdate","parameterTypes":["java.util.List","org.springframework.data.elasticsearch.core.query.BulkOptions","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"closePointInTime","parameterTypes":["java.lang.String"] }, 
    {"name":"cluster","parameterTypes":[] }, 
    {"name":"count","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"delete","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"doBulkOperation","parameterTypes":["java.util.List","org.springframework.data.elasticsearch.core.query.BulkOptions","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"doIndex","parameterTypes":["org.springframework.data.elasticsearch.core.query.IndexQuery","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"get","parameterTypes":["java.lang.String","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"getClusterVersion","parameterTypes":[] }, 
    {"name":"getRuntimeLibraryVersion","parameterTypes":[] }, 
    {"name":"getVendor","parameterTypes":[] }, 
    {"name":"idsQuery","parameterTypes":["java.util.List"] }, 
    {"name":"indexOps","parameterTypes":["java.lang.Class"] }, 
    {"name":"indexOps","parameterTypes":["org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"matchAllQuery","parameterTypes":[] }, 
    {"name":"multiGet","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"multiSearch","parameterTypes":["java.util.List","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"multiSearch","parameterTypes":["java.util.List","java.util.List"] }, 
    {"name":"multiSearch","parameterTypes":["java.util.List","java.util.List","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"openPointInTime","parameterTypes":["org.springframework.data.elasticsearch.core.mapping.IndexCoordinates","java.time.Duration","java.lang.Boolean"] }, 
    {"name":"reindex","parameterTypes":["org.springframework.data.elasticsearch.core.reindex.ReindexRequest"] }, 
    {"name":"search","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"searchScrollClear","parameterTypes":["java.util.List"] }, 
    {"name":"searchScrollContinue","parameterTypes":["java.lang.String","long","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"searchScrollStart","parameterTypes":["long","org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"submitReindex","parameterTypes":["org.springframework.data.elasticsearch.core.reindex.ReindexRequest"] }, 
    {"name":"update","parameterTypes":["org.springframework.data.elasticsearch.core.query.UpdateQuery","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"updateByQuery","parameterTypes":["org.springframework.data.elasticsearch.core.query.UpdateQuery","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }
  ]
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"close","parameterTypes":[] }, 
    {"name":"withTransportOptions","parameterTypes":["co.elastic.clients.transport.TransportOptions"] }
  ]
},
{
  "name":"org.springframework.data.elasticsearch.config.ElasticsearchConfigurationSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"elasticsearchCustomConversions","parameterTypes":[] }, 
    {"name":"elasticsearchEntityMapper","parameterTypes":["org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchMappingContext","org.springframework.data.elasticsearch.core.convert.ElasticsearchCustomConversions"] }, 
    {"name":"elasticsearchMappingContext","parameterTypes":["org.springframework.data.elasticsearch.core.convert.ElasticsearchCustomConversions"] }
  ]
},
{
  "name":"org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"bulkIndex","parameterTypes":["java.util.List","java.lang.Class"] }, 
    {"name":"bulkIndex","parameterTypes":["java.util.List","org.springframework.data.elasticsearch.core.query.BulkOptions","java.lang.Class"] }, 
    {"name":"bulkIndex","parameterTypes":["java.util.List","org.springframework.data.elasticsearch.core.query.BulkOptions","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"bulkOperation","parameterTypes":["java.util.List","org.springframework.data.elasticsearch.core.query.BulkOptions","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"bulkUpdate","parameterTypes":["java.util.List","java.lang.Class"] }, 
    {"name":"count","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, 
    {"name":"delete","parameterTypes":["java.lang.Object"] }, 
    {"name":"delete","parameterTypes":["java.lang.Object","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"delete","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"delete","parameterTypes":["java.lang.String","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"delete","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, 
    {"name":"exists","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"exists","parameterTypes":["java.lang.String","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"get","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"getElasticsearchConverter","parameterTypes":[] }, 
    {"name":"getEntityRouting","parameterTypes":["java.lang.Object"] }, 
    {"name":"getIndexCoordinatesFor","parameterTypes":["java.lang.Class"] }, 
    {"name":"getRefreshPolicy","parameterTypes":[] }, 
    {"name":"index","parameterTypes":["org.springframework.data.elasticsearch.core.query.IndexQuery","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"logVersions","parameterTypes":[] }, 
    {"name":"multiGet","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, 
    {"name":"multiSearch","parameterTypes":["java.util.List","java.lang.Class"] }, 
    {"name":"save","parameterTypes":["java.lang.Iterable"] }, 
    {"name":"save","parameterTypes":["java.lang.Iterable","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"save","parameterTypes":["java.lang.Object"] }, 
    {"name":"save","parameterTypes":["java.lang.Object","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"save","parameterTypes":["java.lang.Object[]"] }, 
    {"name":"search","parameterTypes":["org.springframework.data.elasticsearch.core.query.MoreLikeThisQuery","java.lang.Class"] }, 
    {"name":"search","parameterTypes":["org.springframework.data.elasticsearch.core.query.MoreLikeThisQuery","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"search","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, 
    {"name":"searchForStream","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, 
    {"name":"searchForStream","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"searchScrollClear","parameterTypes":["java.lang.String"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setEntityCallbacks","parameterTypes":["org.springframework.data.mapping.callback.EntityCallbacks"] }, 
    {"name":"setRefreshPolicy","parameterTypes":["org.springframework.data.elasticsearch.core.RefreshPolicy"] }, 
    {"name":"update","parameterTypes":["java.lang.Object"] }, 
    {"name":"withRouting","parameterTypes":["org.springframework.data.elasticsearch.core.routing.RoutingResolver"] }
  ]
},
{
  "name":"org.springframework.data.elasticsearch.core.DocumentOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"bulkIndex","parameterTypes":["java.util.List","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"bulkUpdate","parameterTypes":["java.util.List","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }
  ]
},
{
  "name":"org.springframework.data.elasticsearch.core.ElasticsearchOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"convertId","parameterTypes":["java.lang.Object"] }, 
    {"name":"stringIdRepresentation","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.data.elasticsearch.core.SearchOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"count","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, 
    {"name":"openPointInTime","parameterTypes":["org.springframework.data.elasticsearch.core.mapping.IndexCoordinates","java.time.Duration"] }, 
    {"name":"searchOne","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, 
    {"name":"searchOne","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }
  ]
},
{
  "name":"org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"convertId","parameterTypes":["java.lang.Object"] }, 
    {"name":"getProjectionFactory","parameterTypes":[] }, 
    {"name":"mapObject","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.data.elasticsearch.core.convert.ElasticsearchCustomConversions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getConversionService","parameterTypes":[] }, 
    {"name":"getMappingContext","parameterTypes":[] }, 
    {"name":"read","parameterTypes":["java.lang.Class","java.lang.Object"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"updateQuery","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, 
    {"name":"write","parameterTypes":["java.lang.Object","java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.data.elasticsearch.core.document.Document",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.core.document.MapDocument",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.elasticsearch.core.index.Settings",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchMappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.repository.ElasticsearchRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"searchSimilar","parameterTypes":["java.lang.Object","java.lang.String[]","org.springframework.data.domain.Pageable"] }]
},
{
  "name":"org.springframework.data.elasticsearch.repository.config.EnableElasticsearchRepositories",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.Class"] }, 
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"setElasticsearchOperations","parameterTypes":["org.springframework.data.elasticsearch.core.ElasticsearchOperations"] }
  ]
},
{
  "name":"org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.data.elasticsearch.repository.support.ElasticsearchEntityInformation","org.springframework.data.elasticsearch.core.ElasticsearchOperations"] }, 
    {"name":"count","parameterTypes":[] }, 
    {"name":"delete","parameterTypes":["java.lang.Object"] }, 
    {"name":"deleteAll","parameterTypes":[] }, 
    {"name":"deleteAll","parameterTypes":["java.lang.Iterable"] }, 
    {"name":"deleteAllById","parameterTypes":["java.lang.Iterable"] }, 
    {"name":"deleteById","parameterTypes":["java.lang.Object"] }, 
    {"name":"existsById","parameterTypes":["java.lang.Object"] }, 
    {"name":"findAll","parameterTypes":[] }, 
    {"name":"findAll","parameterTypes":["org.springframework.data.domain.Pageable"] }, 
    {"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }, 
    {"name":"findAllById","parameterTypes":["java.lang.Iterable"] }, 
    {"name":"findById","parameterTypes":["java.lang.Object"] }, 
    {"name":"save","parameterTypes":["java.lang.Object"] }, 
    {"name":"saveAll","parameterTypes":["java.lang.Iterable"] }, 
    {"name":"searchSimilar","parameterTypes":["java.lang.Object","java.lang.String[]","org.springframework.data.domain.Pageable"] }
  ]
},
{
  "name":"org.springframework.data.elasticsearch.support.DefaultStringObjectMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.support.StringObjectMap",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.geo.GeoModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.keyvalue.annotation.KeySpace",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.keyvalue.core.AbstractKeyValueAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"count","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.String"] }, 
    {"name":"find","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.String"] }, 
    {"name":"find","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.String","java.lang.Class"] }
  ]
},
{
  "name":"org.springframework.data.keyvalue.core.KeyValueAdapter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"entries","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"exists","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.data.keyvalue.core.KeyValueOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.keyvalue.core.KeyValueTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"count","parameterTypes":["java.lang.Class"] }, 
    {"name":"count","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.Class"] }, 
    {"name":"delete","parameterTypes":["java.lang.Class"] }, 
    {"name":"delete","parameterTypes":["java.lang.Object"] }, 
    {"name":"delete","parameterTypes":["java.lang.Object","java.lang.Class"] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.keyvalue.core.KeyValueCallback"] }, 
    {"name":"exists","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.Class"] }, 
    {"name":"find","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.Class"] }, 
    {"name":"findAll","parameterTypes":["java.lang.Class"] }, 
    {"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort","java.lang.Class"] }, 
    {"name":"findById","parameterTypes":["java.lang.Object","java.lang.Class"] }, 
    {"name":"findInRange","parameterTypes":["long","int","java.lang.Class"] }, 
    {"name":"findInRange","parameterTypes":["long","int","org.springframework.data.domain.Sort","java.lang.Class"] }, 
    {"name":"insert","parameterTypes":["java.lang.Object"] }, 
    {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, 
    {"name":"setEventTypesToPublish","parameterTypes":["java.util.Set"] }, 
    {"name":"setExceptionTranslator","parameterTypes":["org.springframework.dao.support.PersistenceExceptionTranslator"] }
  ]
},
{
  "name":"org.springframework.data.keyvalue.core.mapping.context.KeyValueMappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"createPersistentProperty","parameterTypes":["org.springframework.data.mapping.model.Property","org.springframework.data.keyvalue.core.mapping.KeyValuePersistentEntity","org.springframework.data.mapping.model.SimpleTypeHolder"] }, 
    {"name":"createPersistentProperty","parameterTypes":["org.springframework.data.mapping.model.Property","org.springframework.data.mapping.model.MutablePersistentEntity","org.springframework.data.mapping.model.SimpleTypeHolder"] }
  ]
},
{
  "name":"org.springframework.data.keyvalue.repository.KeyValueRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.keyvalue.repository.query.KeyValuePartTreeQuery",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.repository.query.QueryMethod","org.springframework.data.repository.query.QueryMethodEvaluationContextProvider","org.springframework.data.keyvalue.core.KeyValueOperations","java.lang.Class"] }]
},
{
  "name":"org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"setKeyValueOperations","parameterTypes":["org.springframework.data.keyvalue.core.KeyValueOperations"] }, 
    {"name":"setMappingContext","parameterTypes":["org.springframework.data.mapping.context.MappingContext"] }, 
    {"name":"setQueryCreator","parameterTypes":["java.lang.Class"] }, 
    {"name":"setQueryType","parameterTypes":["java.lang.Class"] }
  ]
},
{
  "name":"org.springframework.data.keyvalue.repository.support.SimpleKeyValueRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.data.repository.core.EntityInformation","org.springframework.data.keyvalue.core.KeyValueOperations"] }, 
    {"name":"count","parameterTypes":[] }, 
    {"name":"delete","parameterTypes":["java.lang.Object"] }, 
    {"name":"deleteAll","parameterTypes":[] }, 
    {"name":"deleteAll","parameterTypes":["java.lang.Iterable"] }, 
    {"name":"deleteAllById","parameterTypes":["java.lang.Iterable"] }, 
    {"name":"deleteById","parameterTypes":["java.lang.Object"] }, 
    {"name":"existsById","parameterTypes":["java.lang.Object"] }, 
    {"name":"findAll","parameterTypes":[] }, 
    {"name":"findAll","parameterTypes":["org.springframework.data.domain.Pageable"] }, 
    {"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }, 
    {"name":"findAllById","parameterTypes":["java.lang.Iterable"] }, 
    {"name":"findById","parameterTypes":["java.lang.Object"] }, 
    {"name":"save","parameterTypes":["java.lang.Object"] }, 
    {"name":"saveAll","parameterTypes":["java.lang.Iterable"] }
  ]
},
{
  "name":"org.springframework.data.mapping.context.AbstractMappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"createPersistentProperty","parameterTypes":["org.springframework.data.mapping.model.Property","org.springframework.data.mapping.model.MutablePersistentEntity","org.springframework.data.mapping.model.SimpleTypeHolder"] }, 
    {"name":"findPersistentPropertyPaths","parameterTypes":["java.lang.Class","java.util.function.Predicate"] }, 
    {"name":"getManagedTypes","parameterTypes":[] }, 
    {"name":"getPersistentEntities","parameterTypes":[] }, 
    {"name":"getPersistentEntity","parameterTypes":["java.lang.Class"] }, 
    {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, 
    {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.util.TypeInformation"] }, 
    {"name":"getPersistentPropertyPath","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"getPersistentPropertyPath","parameterTypes":["org.springframework.data.mapping.PropertyPath"] }, 
    {"name":"hasPersistentEntityFor","parameterTypes":["java.lang.Class"] }, 
    {"name":"initialize","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, 
    {"name":"setInitialEntitySet","parameterTypes":["java.util.Set"] }, 
    {"name":"setManagedTypes","parameterTypes":["org.springframework.data.domain.ManagedTypes"] }, 
    {"name":"setSimpleTypeHolder","parameterTypes":["org.springframework.data.mapping.model.SimpleTypeHolder"] }, 
    {"name":"setStrict","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.data.mapping.context.MappingContext",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getRequiredPersistentEntity","parameterTypes":["java.lang.Class"] }, 
    {"name":"getRequiredPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, 
    {"name":"getRequiredPersistentEntity","parameterTypes":["org.springframework.data.util.TypeInformation"] }
  ]
},
{
  "name":"org.springframework.data.querydsl.QuerydslPredicateExecutor"
},
{
  "name":"org.springframework.data.querydsl.ReactiveQuerydslPredicateExecutor"
},
{
  "name":"org.springframework.data.redis.connection.ReactiveRedisConnectionFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.redis.connection.RedisConnectionFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getClusterConnection","parameterTypes":[] }, 
    {"name":"getConnection","parameterTypes":[] }, 
    {"name":"getConvertPipelineAndTxResults","parameterTypes":[] }, 
    {"name":"getReactiveClusterConnection","parameterTypes":[] }, 
    {"name":"getReactiveConnection","parameterTypes":[] }, 
    {"name":"getSentinelConnection","parameterTypes":[] }, 
    {"name":"translateExceptionIfPossible","parameterTypes":["java.lang.RuntimeException"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.RedisAccessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getConnectionFactory","parameterTypes":[] }, 
    {"name":"getRequiredConnectionFactory","parameterTypes":[] }, 
    {"name":"setConnectionFactory","parameterTypes":["org.springframework.data.redis.connection.RedisConnectionFactory"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.RedisHash",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.core.RedisKeyValueAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.data.redis.core.RedisOperations","org.springframework.data.redis.core.convert.RedisConverter"] }, 
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"clear","parameterTypes":[] }, 
    {"name":"contains","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"count","parameterTypes":["java.lang.String"] }, 
    {"name":"delete","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"delete","parameterTypes":["java.lang.Object","java.lang.String","java.lang.Class"] }, 
    {"name":"deleteAllOf","parameterTypes":["java.lang.String"] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"entries","parameterTypes":["java.lang.String"] }, 
    {"name":"get","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"get","parameterTypes":["java.lang.Object","java.lang.String","java.lang.Class"] }, 
    {"name":"getAllOf","parameterTypes":["java.lang.String"] }, 
    {"name":"getAllOf","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, 
    {"name":"put","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.String"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setEnableKeyspaceEvents","parameterTypes":["org.springframework.data.redis.core.RedisKeyValueAdapter$EnableKeyspaceEvents"] }, 
    {"name":"setKeyspaceNotificationsConfigParameter","parameterTypes":["java.lang.String"] }, 
    {"name":"setShadowCopy","parameterTypes":["org.springframework.data.redis.core.RedisKeyValueAdapter$ShadowCopy"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.RedisKeyValueAdapter$EnableKeyspaceEvents",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.core.RedisKeyValueAdapter$ShadowCopy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.core.RedisKeyValueTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.data.redis.core.RedisKeyValueAdapter","org.springframework.data.redis.core.mapping.RedisMappingContext"] }, 
    {"name":"getMappingContext","parameterTypes":[] }, 
    {"name":"insert","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"update","parameterTypes":["java.lang.Object"] }, 
    {"name":"update","parameterTypes":["java.lang.Object","java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.RedisOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"expire","parameterTypes":["java.lang.Object","java.time.Duration"] }, 
    {"name":"expireAt","parameterTypes":["java.lang.Object","java.time.Instant"] }, 
    {"name":"restore","parameterTypes":["java.lang.Object","byte[]","long","java.util.concurrent.TimeUnit"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.RedisTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"boundGeoOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"boundHashOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"boundListOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"boundSetOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"boundStreamOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"boundValueOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"boundZSetOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"convertAndSend","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"copy","parameterTypes":["java.lang.Object","java.lang.Object","boolean"] }, 
    {"name":"countExistingKeys","parameterTypes":["java.util.Collection"] }, 
    {"name":"delete","parameterTypes":["java.lang.Object"] }, 
    {"name":"delete","parameterTypes":["java.util.Collection"] }, 
    {"name":"discard","parameterTypes":[] }, 
    {"name":"dump","parameterTypes":["java.lang.Object"] }, 
    {"name":"exec","parameterTypes":[] }, 
    {"name":"exec","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.redis.core.RedisCallback"] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.redis.core.SessionCallback"] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript","java.util.List","java.lang.Object[]"] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript","org.springframework.data.redis.serializer.RedisSerializer","org.springframework.data.redis.serializer.RedisSerializer","java.util.List","java.lang.Object[]"] }, 
    {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.RedisCallback"] }, 
    {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.RedisCallback","org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.SessionCallback"] }, 
    {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.SessionCallback","org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"executeWithStickyConnection","parameterTypes":["org.springframework.data.redis.core.RedisCallback"] }, 
    {"name":"expire","parameterTypes":["java.lang.Object","long","java.util.concurrent.TimeUnit"] }, 
    {"name":"expireAt","parameterTypes":["java.lang.Object","java.util.Date"] }, 
    {"name":"getClientList","parameterTypes":[] }, 
    {"name":"getExpire","parameterTypes":["java.lang.Object"] }, 
    {"name":"getExpire","parameterTypes":["java.lang.Object","java.util.concurrent.TimeUnit"] }, 
    {"name":"getHashKeySerializer","parameterTypes":[] }, 
    {"name":"getHashValueSerializer","parameterTypes":[] }, 
    {"name":"getKeySerializer","parameterTypes":[] }, 
    {"name":"getValueSerializer","parameterTypes":[] }, 
    {"name":"hasKey","parameterTypes":["java.lang.Object"] }, 
    {"name":"keys","parameterTypes":["java.lang.Object"] }, 
    {"name":"killClient","parameterTypes":["java.lang.String","int"] }, 
    {"name":"move","parameterTypes":["java.lang.Object","int"] }, 
    {"name":"multi","parameterTypes":[] }, 
    {"name":"opsForCluster","parameterTypes":[] }, 
    {"name":"opsForGeo","parameterTypes":[] }, 
    {"name":"opsForHash","parameterTypes":[] }, 
    {"name":"opsForHyperLogLog","parameterTypes":[] }, 
    {"name":"opsForList","parameterTypes":[] }, 
    {"name":"opsForSet","parameterTypes":[] }, 
    {"name":"opsForStream","parameterTypes":[] }, 
    {"name":"opsForStream","parameterTypes":["org.springframework.data.redis.hash.HashMapper"] }, 
    {"name":"opsForValue","parameterTypes":[] }, 
    {"name":"opsForZSet","parameterTypes":[] }, 
    {"name":"persist","parameterTypes":["java.lang.Object"] }, 
    {"name":"randomKey","parameterTypes":[] }, 
    {"name":"rename","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"renameIfAbsent","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"replicaOf","parameterTypes":["java.lang.String","int"] }, 
    {"name":"replicaOfNoOne","parameterTypes":[] }, 
    {"name":"restore","parameterTypes":["java.lang.Object","byte[]","long","java.util.concurrent.TimeUnit","boolean"] }, 
    {"name":"scan","parameterTypes":["org.springframework.data.redis.core.ScanOptions"] }, 
    {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, 
    {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery"] }, 
    {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","java.lang.Object"] }, 
    {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","org.springframework.data.redis.core.BulkMapper"] }, 
    {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","org.springframework.data.redis.core.BulkMapper","org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"type","parameterTypes":["java.lang.Object"] }, 
    {"name":"unlink","parameterTypes":["java.lang.Object"] }, 
    {"name":"unlink","parameterTypes":["java.util.Collection"] }, 
    {"name":"unwatch","parameterTypes":[] }, 
    {"name":"watch","parameterTypes":["java.lang.Object"] }, 
    {"name":"watch","parameterTypes":["java.util.Collection"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.convert.KeyspaceConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.core.convert.MappingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.redis.core.index.ConfigurableIndexDefinitionProvider","org.springframework.data.redis.core.convert.KeyspaceConfiguration"] }]
},
{
  "name":"org.springframework.data.redis.core.convert.MappingRedisConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.data.redis.core.mapping.RedisMappingContext"] }, 
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getConversionService","parameterTypes":[] }, 
    {"name":"getIndexResolver","parameterTypes":[] }, 
    {"name":"getMappingContext","parameterTypes":[] }, 
    {"name":"read","parameterTypes":["java.lang.Class","java.lang.Object"] }, 
    {"name":"setCustomConversions","parameterTypes":["org.springframework.data.convert.CustomConversions"] }, 
    {"name":"setReferenceResolver","parameterTypes":["org.springframework.data.redis.core.convert.ReferenceResolver"] }, 
    {"name":"write","parameterTypes":["java.lang.Object","java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.convert.RedisConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.redis.core.convert.RedisCustomConversions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.core.convert.ReferenceResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.redis.core.convert.ReferenceResolverImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.data.redis.core.RedisOperations"] }, 
    {"name":"resolveReference","parameterTypes":["java.lang.Object","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.index.ConfigurableIndexDefinitionProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.redis.core.index.IndexConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addIndexDefinition","parameterTypes":["org.springframework.data.redis.core.index.IndexDefinition"] }, 
    {"name":"getIndexDefinitionsFor","parameterTypes":["java.io.Serializable"] }, 
    {"name":"getIndexDefinitionsFor","parameterTypes":["java.io.Serializable","java.lang.String"] }, 
    {"name":"hasIndexFor","parameterTypes":["java.io.Serializable"] }, 
    {"name":"hasIndexFor","parameterTypes":["java.io.Serializable","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.index.IndexDefinitionProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.redis.core.index.IndexDefinitionRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.redis.core.mapping.RedisMappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.data.redis.core.convert.MappingConfiguration"] }, 
    {"name":"setFallbackKeySpaceResolver","parameterTypes":["org.springframework.data.keyvalue.core.mapping.KeySpaceResolver"] }
  ]
},
{
  "name":"org.springframework.data.redis.repository.query.RedisQueryCreator",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.repository.query.parser.PartTree","org.springframework.data.repository.query.ParameterAccessor"] }]
},
{
  "name":"org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.data.repository.CrudRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"count","parameterTypes":[] }, 
    {"name":"delete","parameterTypes":["java.lang.Object"] }, 
    {"name":"deleteAll","parameterTypes":[] }, 
    {"name":"deleteAll","parameterTypes":["java.lang.Iterable"] }, 
    {"name":"deleteAllById","parameterTypes":["java.lang.Iterable"] }, 
    {"name":"deleteById","parameterTypes":["java.lang.Object"] }, 
    {"name":"existsById","parameterTypes":["java.lang.Object"] }, 
    {"name":"findAll","parameterTypes":[] }, 
    {"name":"findAllById","parameterTypes":["java.lang.Iterable"] }, 
    {"name":"findById","parameterTypes":["java.lang.Object"] }, 
    {"name":"save","parameterTypes":["java.lang.Object"] }, 
    {"name":"saveAll","parameterTypes":["java.lang.Iterable"] }
  ]
},
{
  "name":"org.springframework.data.repository.ListCrudRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.repository.ListPagingAndSortingRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.repository.NoRepositoryBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.repository.PagingAndSortingRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"findAll","parameterTypes":["org.springframework.data.domain.Pageable"] }, 
    {"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }
  ]
},
{
  "name":"org.springframework.data.repository.Repository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getObject","parameterTypes":[] }, 
    {"name":"getObjectType","parameterTypes":[] }, 
    {"name":"isSingleton","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.data.repository.core.NamedQueries",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getQuery","parameterTypes":["java.lang.String"] }, 
    {"name":"hasQuery","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"empty","parameterTypes":[] }, 
    {"name":"iterator","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addRepositoryFactoryCustomizer","parameterTypes":["org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"] }, 
    {"name":"getEntityInformation","parameterTypes":[] }, 
    {"name":"getObject","parameterTypes":[] }, 
    {"name":"getObjectType","parameterTypes":[] }, 
    {"name":"getPersistentEntity","parameterTypes":[] }, 
    {"name":"getQueryMethods","parameterTypes":[] }, 
    {"name":"getRepositoryInformation","parameterTypes":[] }, 
    {"name":"isSingleton","parameterTypes":[] }, 
    {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, 
    {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, 
    {"name":"setCustomImplementation","parameterTypes":["java.lang.Object"] }, 
    {"name":"setEvaluationContextProvider","parameterTypes":["org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"] }, 
    {"name":"setLazyInit","parameterTypes":["boolean"] }, 
    {"name":"setNamedQueries","parameterTypes":["org.springframework.data.repository.core.NamedQueries"] }, 
    {"name":"setQueryLookupStrategyKey","parameterTypes":["org.springframework.data.repository.query.QueryLookupStrategy$Key"] }, 
    {"name":"setRepositoryBaseClass","parameterTypes":["java.lang.Class"] }, 
    {"name":"setRepositoryFragments","parameterTypes":["org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"] }
  ]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactoryInformation",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.util.List"] }, 
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getObject","parameterTypes":[] }, 
    {"name":"getObjectType","parameterTypes":[] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }
  ]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryMethodInvocationListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.repository.query.QueryByExampleExecutor"
},
{
  "name":"org.springframework.data.repository.query.QueryLookupStrategy$Key",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.repository.query.ReactiveQueryByExampleExecutor"
},
{
  "name":"org.springframework.data.util.CustomCollections$EclipseCollections",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.CustomCollections$VavrCollections",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.CustomCollections.EclipseCollections"
},
{
  "name":"org.springframework.data.util.CustomCollections.VavrCollections"
},
{
  "name":"org.springframework.data.util.Streamable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"and","parameterTypes":["java.lang.Iterable"] }, 
    {"name":"and","parameterTypes":["java.util.function.Supplier"] }, 
    {"name":"and","parameterTypes":["org.springframework.data.util.Streamable"] }, 
    {"name":"and","parameterTypes":["java.lang.Object[]"] }, 
    {"name":"filter","parameterTypes":["java.util.function.Predicate"] }, 
    {"name":"flatMap","parameterTypes":["java.util.function.Function"] }, 
    {"name":"get","parameterTypes":[] }, 
    {"name":"isEmpty","parameterTypes":[] }, 
    {"name":"map","parameterTypes":["java.util.function.Function"] }, 
    {"name":"stream","parameterTypes":[] }, 
    {"name":"toList","parameterTypes":[] }, 
    {"name":"toSet","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.data.web.config.EnableSpringDataWebSupport",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }
  ]
},
{
  "name":"org.springframework.data.web.config.SpringDataJacksonConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.web.config.SpringDataJacksonModules",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.config.SpringDataWebConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.beans.factory.ObjectFactory"] }, 
    {"name":"addArgumentResolvers","parameterTypes":["java.util.List"] }, 
    {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, 
    {"name":"extendMessageConverters","parameterTypes":["java.util.List"] }, 
    {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }
  ]
},
{
  "name":"org.springframework.format.FormatterRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.format.support.DefaultFormattingConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addDefaultFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }]
},
{
  "name":"org.springframework.format.support.FormattingConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addFormatter","parameterTypes":["org.springframework.format.Formatter"] }, 
    {"name":"addFormatterForFieldAnnotation","parameterTypes":["org.springframework.format.AnnotationFormatterFactory"] }, 
    {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Formatter"] }, 
    {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Printer","org.springframework.format.Parser"] }, 
    {"name":"addParser","parameterTypes":["org.springframework.format.Parser"] }, 
    {"name":"addPrinter","parameterTypes":["org.springframework.format.Printer"] }, 
    {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }
  ]
},
{
  "name":"org.springframework.graphql.test.tester$HttpGraphQlTester"
},
{
  "name":"org.springframework.graphql.test.tester.HttpGraphQlTester"
},
{
  "name":"org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter"
},
{
  "name":"org.springframework.http.converter.AbstractGenericHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"canWrite","parameterTypes":["java.lang.reflect.Type","java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"write","parameterTypes":["java.lang.Object","java.lang.reflect.Type","org.springframework.http.MediaType","org.springframework.http.HttpOutputMessage"] }
  ]
},
{
  "name":"org.springframework.http.converter.AbstractHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addDefaultHeaders","parameterTypes":["org.springframework.http.HttpHeaders","java.lang.Object","org.springframework.http.MediaType"] }, 
    {"name":"canRead","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"canWrite","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"getContentLength","parameterTypes":["java.lang.Object","org.springframework.http.MediaType"] }, 
    {"name":"getDefaultCharset","parameterTypes":[] }, 
    {"name":"getSupportedMediaTypes","parameterTypes":[] }, 
    {"name":"read","parameterTypes":["java.lang.Class","org.springframework.http.HttpInputMessage"] }, 
    {"name":"setDefaultCharset","parameterTypes":["java.nio.charset.Charset"] }, 
    {"name":"setSupportedMediaTypes","parameterTypes":["java.util.List"] }, 
    {"name":"write","parameterTypes":["java.lang.Object","org.springframework.http.MediaType","org.springframework.http.HttpOutputMessage"] }, 
    {"name":"writeInternal","parameterTypes":["java.lang.Object","org.springframework.http.HttpOutputMessage"] }
  ]
},
{
  "name":"org.springframework.http.converter.GenericHttpMessageConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.converter.HttpMessageConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getSupportedMediaTypes","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.http.converter.StringHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"canRead","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"canRead","parameterTypes":["java.lang.reflect.Type","java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"canWrite","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"getObjectMapper","parameterTypes":[] }, 
    {"name":"getObjectMappersForType","parameterTypes":["java.lang.Class"] }, 
    {"name":"getSupportedMediaTypes","parameterTypes":["java.lang.Class"] }, 
    {"name":"read","parameterTypes":["java.lang.reflect.Type","java.lang.Class","org.springframework.http.HttpInputMessage"] }, 
    {"name":"registerObjectMappersForType","parameterTypes":["java.lang.Class","java.util.function.Consumer"] }, 
    {"name":"setObjectMapper","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper"] }, 
    {"name":"setPrettyPrint","parameterTypes":["boolean"] }, 
    {"name":"setSupportedMediaTypes","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.http.converter.json.GsonHttpMessageConverter"
},
{
  "name":"org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.annotation.EnableKafka",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.lang.NonNullApi"
},
{
  "name":"org.springframework.lang.Nullable"
},
{
  "name":"org.springframework.security.authentication.AnonymousAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"authenticate","parameterTypes":["org.springframework.security.core.Authentication"] }, 
    {"name":"setMessageSource","parameterTypes":["org.springframework.context.MessageSource"] }, 
    {"name":"supports","parameterTypes":["java.lang.Class"] }
  ]
},
{
  "name":"org.springframework.security.authentication.AuthenticationEventPublisher",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.authentication.AuthenticationManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.authentication.AuthenticationProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"publishAuthenticationFailure","parameterTypes":["org.springframework.security.core.AuthenticationException","org.springframework.security.core.Authentication"] }, 
    {"name":"publishAuthenticationSuccess","parameterTypes":["org.springframework.security.core.Authentication"] }, 
    {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }
  ]
},
{
  "name":"org.springframework.security.authentication.ProviderManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"authenticate","parameterTypes":["org.springframework.security.core.Authentication"] }, 
    {"name":"setMessageSource","parameterTypes":["org.springframework.context.MessageSource"] }
  ]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authorization.AuthorizationManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"verify","parameterTypes":["java.util.function.Supplier","java.lang.Object"] }]
},
{
  "name":"org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"apply","parameterTypes":["org.springframework.security.config.annotation.SecurityConfigurer"] }, 
    {"name":"apply","parameterTypes":["org.springframework.security.config.annotation.SecurityConfigurerAdapter"] }, 
    {"name":"getConfigurer","parameterTypes":["java.lang.Class"] }, 
    {"name":"getConfigurers","parameterTypes":["java.lang.Class"] }, 
    {"name":"getOrBuild","parameterTypes":[] }, 
    {"name":"getSharedObject","parameterTypes":["java.lang.Class"] }, 
    {"name":"getSharedObjects","parameterTypes":[] }, 
    {"name":"objectPostProcessor","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor"] }, 
    {"name":"removeConfigurer","parameterTypes":["java.lang.Class"] }, 
    {"name":"removeConfigurers","parameterTypes":["java.lang.Class"] }, 
    {"name":"setSharedObject","parameterTypes":["java.lang.Class","java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.AbstractSecurityBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"build","parameterTypes":[] }, 
    {"name":"getObject","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.ObjectPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.config.annotation.SecurityBuilder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.config.annotation.SecurityConfigurer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }]
},
{
  "name":"org.springframework.security.config.annotation.SecurityConfigurerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addObjectPostProcessor","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor"] }, 
    {"name":"and","parameterTypes":[] }, 
    {"name":"configure","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, 
    {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, 
    {"name":"setBuilder","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.authentication.ProviderManagerBuilder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"authenticationEventPublisher","parameterTypes":["org.springframework.security.authentication.AuthenticationEventPublisher"] }, 
    {"name":"authenticationProvider","parameterTypes":["org.springframework.security.authentication.AuthenticationProvider"] }, 
    {"name":"eraseCredentials","parameterTypes":["boolean"] }, 
    {"name":"getDefaultUserDetailsService","parameterTypes":[] }, 
    {"name":"isConfigured","parameterTypes":[] }, 
    {"name":"ldapAuthentication","parameterTypes":[] }, 
    {"name":"parentAuthenticationManager","parameterTypes":["org.springframework.security.authentication.AuthenticationManager"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$DefaultPasswordEncoderAuthenticationManagerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"inMemoryAuthentication","parameterTypes":[] }, 
    {"name":"jdbcAuthentication","parameterTypes":[] }, 
    {"name":"userDetailsService","parameterTypes":["org.springframework.security.core.userdetails.UserDetailsService"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, 
    {"name":"init","parameterTypes":["org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.EnableGlobalAuthentication",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"configure","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, 
    {"name":"configure","parameterTypes":["org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"] }, 
    {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, 
    {"name":"init","parameterTypes":["org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, 
    {"name":"init","parameterTypes":["org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterSingletonsInstantiated","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"postProcess","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.web.HttpSecurityBuilder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.config.annotation.web.builders.HttpSecurity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addFilter","parameterTypes":["jakarta.servlet.Filter"] }, 
    {"name":"addFilterAfter","parameterTypes":["jakarta.servlet.Filter","java.lang.Class"] }, 
    {"name":"addFilterBefore","parameterTypes":["jakarta.servlet.Filter","java.lang.Class"] }, 
    {"name":"authenticationProvider","parameterTypes":["org.springframework.security.authentication.AuthenticationProvider"] }, 
    {"name":"setSharedObject","parameterTypes":["java.lang.Class","java.lang.Object"] }, 
    {"name":"userDetailsService","parameterTypes":["org.springframework.security.core.userdetails.UserDetailsService"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.EnableWebSecurity",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addArgumentResolvers","parameterTypes":["java.util.List"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"disable","parameterTypes":[] }, 
    {"name":"withObjectPostProcessor","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"configure","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, 
    {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }
  ]
},
{
  "name":"org.springframework.security.context.DelegatingApplicationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]
},
{
  "name":"org.springframework.security.oauth2.jwt.JwtDecoder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.oauth2.jwt.NimbusJwtDecoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"decode","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"authenticate","parameterTypes":["org.springframework.security.core.Authentication"] }, 
    {"name":"supports","parameterTypes":["java.lang.Class"] }
  ]
},
{
  "name":"org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.DefaultSecurityFilterChain",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getFilters","parameterTypes":[] }, 
    {"name":"matches","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }
  ]
},
{
  "name":"org.springframework.security.web.SecurityFilterChain",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.access.ExceptionTranslationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }, 
    {"name":"setMessageSource","parameterTypes":["org.springframework.context.MessageSource"] }
  ]
},
{
  "name":"org.springframework.security.web.access.intercept.AuthorizationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.security.web.access.intercept.RequestMatcherDelegatingAuthorizationManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"check","parameterTypes":["java.util.function.Supplier","java.lang.Object"] }]
},
{
  "name":"org.springframework.security.web.authentication.logout.LogoutFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.security.web.authentication.logout.LogoutHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.authentication.logout.LogoutSuccessEventPublishingLogoutHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"logout","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","org.springframework.security.core.Authentication"] }, 
    {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }
  ]
},
{
  "name":"org.springframework.security.web.authentication.session.AbstractSessionFixationProtectionStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"onAuthentication","parameterTypes":["org.springframework.security.core.Authentication","jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse"] }, 
    {"name":"setAlwaysCreateSession","parameterTypes":["boolean"] }, 
    {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }
  ]
},
{
  "name":"org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"onAuthentication","parameterTypes":["org.springframework.security.core.Authentication","jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse"] }]
},
{
  "name":"org.springframework.security.web.authentication.session.SessionAuthenticationStrategy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.context.SecurityContextHolderFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.security.web.header.HeaderWriterFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.savedrequest.RequestCacheAwareFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.security.web.servlet.util.matcher.MvcRequestMatcher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"extractUriTemplateVariables","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }, 
    {"name":"matcher","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }, 
    {"name":"matches","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }
  ]
},
{
  "name":"org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }
  ]
},
{
  "name":"org.springframework.security.web.util.matcher.RequestMatcher",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.util.matcher.RequestVariablesExtractor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.stereotype.Component",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Controller",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Indexed",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Service",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.test.context.ActiveProfiles",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.test.context.BootstrapWith",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.test.context.DynamicPropertySource",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.test.context.TestContextManager"
},
{
  "name":"org.springframework.test.context.aot.AotTestAttributes__Generated",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getAttributes","parameterTypes":[] }]
},
{
  "name":"org.springframework.test.context.aot.AotTestContextInitializers__Generated",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getContextInitializerClasses","parameterTypes":[] }, 
    {"name":"getContextInitializers","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.test.context.event.ApplicationEventsTestExecutionListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.test.context.event.EventPublishingTestExecutionListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.test.context.junit.jupiter.SpringExtension",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.test.context.support.DefaultBootstrapContext",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class","org.springframework.test.context.CacheAwareContextLoaderDelegate"] }]
},
{
  "name":"org.springframework.test.context.support.DefaultTestContext",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.test.context.support.DefaultTestContext"] }]
},
{
  "name":"org.springframework.test.context.support.DependencyInjectionTestExecutionListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.test.context.support.DirtiesContextTestExecutionListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.test.context.support.DynamicPropertiesContextCustomizerFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.test.context.transaction.TransactionalTestExecutionListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.test.context.web.ServletTestExecutionListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.test.context.web.WebAppConfiguration"
},
{
  "name":"org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.test.web.reactive.server.WebTestClient"
},
{
  "name":"org.springframework.transaction.TransactionDefinition",
  "allPublicFields":true
},
{
  "name":"org.springframework.transaction.interceptor.TransactionalProxy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.util.function.ThrowingBiFunction"
},
{
  "name":"org.springframework.util.function.ThrowingFunction"
},
{
  "name":"org.springframework.util.function.ThrowingSupplier"
},
{
  "name":"org.springframework.vault.annotation.VaultPropertySource",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.vault.client.RestTemplateFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"create","parameterTypes":[] }]
},
{
  "name":"org.springframework.vault.config.AbstractVaultConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"clientHttpRequestFactoryWrapper","parameterTypes":[] }, 
    {"name":"clientOptions","parameterTypes":[] }, 
    {"name":"restOperations","parameterTypes":[] }, 
    {"name":"restTemplateFactory","parameterTypes":["org.springframework.vault.config.AbstractVaultConfiguration$ClientFactoryWrapper"] }, 
    {"name":"secretLeaseContainer","parameterTypes":[] }, 
    {"name":"sessionManager","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"sslConfiguration","parameterTypes":[] }, 
    {"name":"threadPoolTaskScheduler","parameterTypes":[] }, 
    {"name":"vaultEndpointProvider","parameterTypes":[] }, 
    {"name":"vaultTemplate","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.vault.config.AbstractVaultConfiguration$$SpringCGLIB$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.vault.config.AbstractVaultConfiguration$ClientFactoryWrapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.vault.config.AbstractVaultConfiguration__TestContext001_BeanDefinitions"
},
{
  "name":"org.springframework.vault.config.DefaultRestTemplateFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"create","parameterTypes":["java.util.function.Consumer"] }]
},
{
  "name":"org.springframework.web.accept.ContentNegotiationManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getAllFileExtensions","parameterTypes":[] }, 
    {"name":"resolveFileExtensions","parameterTypes":["org.springframework.http.MediaType"] }, 
    {"name":"resolveMediaTypes","parameterTypes":["org.springframework.web.context.request.NativeWebRequest"] }
  ]
},
{
  "name":"org.springframework.web.accept.ContentNegotiationStrategy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.accept.MediaTypeFileExtensionResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.CrossOrigin",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.DeleteMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ExceptionHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.GetMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.Mapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.PatchMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.PostMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.PutMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ResponseBody",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RestController",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.context.ConfigurableWebApplicationContext"
},
{
  "name":"org.springframework.web.context.ServletContextAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.context.support.WebApplicationObjectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }]
},
{
  "name":"org.springframework.web.cors.CorsConfigurationSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.filter.CharacterEncodingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getEncoding","parameterTypes":[] }, 
    {"name":"isForceRequestEncoding","parameterTypes":[] }, 
    {"name":"isForceResponseEncoding","parameterTypes":[] }, 
    {"name":"setEncoding","parameterTypes":["java.lang.String"] }, 
    {"name":"setForceEncoding","parameterTypes":["boolean"] }, 
    {"name":"setForceRequestEncoding","parameterTypes":["boolean"] }, 
    {"name":"setForceResponseEncoding","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.web.filter.DelegatingFilterProxy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.filter.FormContentFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"setCharset","parameterTypes":["java.nio.charset.Charset"] }, 
    {"name":"setFormConverter","parameterTypes":["org.springframework.http.converter.FormHttpMessageConverter"] }
  ]
},
{
  "name":"org.springframework.web.filter.GenericFilterBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getEnvironment","parameterTypes":[] }, 
    {"name":"getFilterConfig","parameterTypes":[] }, 
    {"name":"init","parameterTypes":["jakarta.servlet.FilterConfig"] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }, 
    {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }
  ]
},
{
  "name":"org.springframework.web.filter.OncePerRequestFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.web.filter.RequestContextFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setThreadContextInheritable","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.web.filter.ServerHttpObservationFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.DispatcherHandler"
},
{
  "name":"org.springframework.web.reactive.function.client.WebClient"
},
{
  "name":"org.springframework.web.servlet.DispatcherServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.FrameworkServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getContextAttribute","parameterTypes":[] }, 
    {"name":"getContextClass","parameterTypes":[] }, 
    {"name":"getContextConfigLocation","parameterTypes":[] }, 
    {"name":"getContextId","parameterTypes":[] }, 
    {"name":"getNamespace","parameterTypes":[] }, 
    {"name":"getServletContextAttributeName","parameterTypes":[] }, 
    {"name":"getWebApplicationContext","parameterTypes":[] }, 
    {"name":"isEnableLoggingRequestDetails","parameterTypes":[] }, 
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.event.ContextRefreshedEvent"] }, 
    {"name":"refresh","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setContextAttribute","parameterTypes":["java.lang.String"] }, 
    {"name":"setContextClass","parameterTypes":["java.lang.Class"] }, 
    {"name":"setContextConfigLocation","parameterTypes":["java.lang.String"] }, 
    {"name":"setContextId","parameterTypes":["java.lang.String"] }, 
    {"name":"setContextInitializerClasses","parameterTypes":["java.lang.String"] }, 
    {"name":"setContextInitializers","parameterTypes":["org.springframework.context.ApplicationContextInitializer[]"] }, 
    {"name":"setDispatchOptionsRequest","parameterTypes":["boolean"] }, 
    {"name":"setDispatchTraceRequest","parameterTypes":["boolean"] }, 
    {"name":"setEnableLoggingRequestDetails","parameterTypes":["boolean"] }, 
    {"name":"setNamespace","parameterTypes":["java.lang.String"] }, 
    {"name":"setPublishContext","parameterTypes":["boolean"] }, 
    {"name":"setPublishEvents","parameterTypes":["boolean"] }, 
    {"name":"setThreadContextInheritable","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.web.servlet.HandlerMapping",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.HttpServletBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getEnvironment","parameterTypes":[] }, 
    {"name":"getServletName","parameterTypes":[] }, 
    {"name":"init","parameterTypes":[] }, 
    {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }
  ]
},
{
  "name":"org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setConfigurers","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"beanNameHandlerMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, 
    {"name":"defaultServletHandlerMapping","parameterTypes":[] }, 
    {"name":"getApplicationContext","parameterTypes":[] }, 
    {"name":"getServletContext","parameterTypes":[] }, 
    {"name":"handlerExceptionResolver","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, 
    {"name":"handlerFunctionAdapter","parameterTypes":[] }, 
    {"name":"httpRequestHandlerAdapter","parameterTypes":[] }, 
    {"name":"mvcHandlerMappingIntrospector","parameterTypes":[] }, 
    {"name":"mvcPathMatcher","parameterTypes":[] }, 
    {"name":"mvcPatternParser","parameterTypes":[] }, 
    {"name":"mvcResourceUrlProvider","parameterTypes":[] }, 
    {"name":"mvcUriComponentsContributor","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"] }, 
    {"name":"mvcUrlPathHelper","parameterTypes":[] }, 
    {"name":"mvcViewResolver","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, 
    {"name":"requestMappingHandlerMapping","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, 
    {"name":"resourceHandlerMapping","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, 
    {"name":"routerFunctionMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }, 
    {"name":"simpleControllerHandlerAdapter","parameterTypes":[] }, 
    {"name":"viewControllerHandlerMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, 
    {"name":"viewNameTranslator","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"addArgumentResolvers","parameterTypes":["java.util.List"] }, 
    {"name":"addCorsMappings","parameterTypes":["org.springframework.web.servlet.config.annotation.CorsRegistry"] }, 
    {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, 
    {"name":"addInterceptors","parameterTypes":["org.springframework.web.servlet.config.annotation.InterceptorRegistry"] }, 
    {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"] }, 
    {"name":"addReturnValueHandlers","parameterTypes":["java.util.List"] }, 
    {"name":"addViewControllers","parameterTypes":["org.springframework.web.servlet.config.annotation.ViewControllerRegistry"] }, 
    {"name":"configureAsyncSupport","parameterTypes":["org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"] }, 
    {"name":"configureContentNegotiation","parameterTypes":["org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"] }, 
    {"name":"configureDefaultServletHandling","parameterTypes":["org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"] }, 
    {"name":"configureHandlerExceptionResolvers","parameterTypes":["java.util.List"] }, 
    {"name":"configureMessageConverters","parameterTypes":["java.util.List"] }, 
    {"name":"configurePathMatch","parameterTypes":["org.springframework.web.servlet.config.annotation.PathMatchConfigurer"] }, 
    {"name":"configureViewResolvers","parameterTypes":["org.springframework.web.servlet.config.annotation.ViewResolverRegistry"] }, 
    {"name":"extendHandlerExceptionResolvers","parameterTypes":["java.util.List"] }, 
    {"name":"extendMessageConverters","parameterTypes":["java.util.List"] }, 
    {"name":"getMessageCodesResolver","parameterTypes":[] }, 
    {"name":"getValidator","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.web.servlet.function.support.RouterFunctionMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"initApplicationContext","parameterTypes":[] }, 
    {"name":"setDetectHandlersInAncestorContexts","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getCorsConfigurationSource","parameterTypes":[] }, 
    {"name":"getCorsProcessor","parameterTypes":[] }, 
    {"name":"getDefaultHandler","parameterTypes":[] }, 
    {"name":"getHandler","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"getPathMatcher","parameterTypes":[] }, 
    {"name":"getPatternParser","parameterTypes":[] }, 
    {"name":"getUrlPathHelper","parameterTypes":[] }, 
    {"name":"setAlwaysUseFullPath","parameterTypes":["boolean"] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setCorsConfigurationSource","parameterTypes":["org.springframework.web.cors.CorsConfigurationSource"] }, 
    {"name":"setCorsConfigurations","parameterTypes":["java.util.Map"] }, 
    {"name":"setCorsProcessor","parameterTypes":["org.springframework.web.cors.CorsProcessor"] }, 
    {"name":"setDefaultHandler","parameterTypes":["java.lang.Object"] }, 
    {"name":"setInterceptors","parameterTypes":["java.lang.Object[]"] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"setPathMatcher","parameterTypes":["org.springframework.util.PathMatcher"] }, 
    {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, 
    {"name":"setRemoveSemicolonContent","parameterTypes":["boolean"] }, 
    {"name":"setUrlDecode","parameterTypes":["boolean"] }, 
    {"name":"setUrlPathHelper","parameterTypes":["org.springframework.web.util.UrlPathHelper"] }, 
    {"name":"usesPathPatterns","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getDirectPaths","parameterTypes":["java.lang.Object"] }, 
    {"name":"getHandlerMethods","parameterTypes":[] }, 
    {"name":"getHandlerMethodsForMappingName","parameterTypes":["java.lang.String"] }, 
    {"name":"getMappingPathPatterns","parameterTypes":["java.lang.Object"] }, 
    {"name":"getMatchingMapping","parameterTypes":["java.lang.Object","jakarta.servlet.http.HttpServletRequest"] }, 
    {"name":"getNamingStrategy","parameterTypes":[] }, 
    {"name":"handleMatch","parameterTypes":["java.lang.Object","java.lang.String","jakarta.servlet.http.HttpServletRequest"] }, 
    {"name":"initCorsConfiguration","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, 
    {"name":"registerHandlerMethod","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, 
    {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }, 
    {"name":"setDetectHandlerMethodsInAncestorContexts","parameterTypes":["boolean"] }, 
    {"name":"setHandlerMethodMappingNamingStrategy","parameterTypes":["org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"] }, 
    {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, 
    {"name":"unregisterMapping","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getHandlerMap","parameterTypes":[] }, 
    {"name":"getPathPatternHandlerMap","parameterTypes":[] }, 
    {"name":"getRootHandler","parameterTypes":[] }, 
    {"name":"match","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String"] }, 
    {"name":"setLazyInitHandlers","parameterTypes":["boolean"] }, 
    {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, 
    {"name":"setRootHandler","parameterTypes":["java.lang.Object"] }, 
    {"name":"setUseTrailingSlashMatch","parameterTypes":["boolean"] }, 
    {"name":"useTrailingSlashMatch","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.handler.HandlerMappingIntrospector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getCorsConfiguration","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.MatchableHandlerMapping",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getBuilderConfiguration","parameterTypes":[] }, 
    {"name":"getContentNegotiationManager","parameterTypes":[] }, 
    {"name":"getFileExtensions","parameterTypes":[] }, 
    {"name":"getPathPrefixes","parameterTypes":[] }, 
    {"name":"initCorsConfiguration","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, 
    {"name":"match","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String"] }, 
    {"name":"registerHandlerMethod","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, 
    {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }, 
    {"name":"registerMapping","parameterTypes":["org.springframework.web.servlet.mvc.method.RequestMappingInfo","java.lang.Object","java.lang.reflect.Method"] }, 
    {"name":"setContentNegotiationManager","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, 
    {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }, 
    {"name":"setPathPrefixes","parameterTypes":["java.util.Map"] }, 
    {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, 
    {"name":"setUseRegisteredSuffixPatternMatch","parameterTypes":["boolean"] }, 
    {"name":"setUseSuffixPatternMatch","parameterTypes":["boolean"] }, 
    {"name":"setUseTrailingSlashMatch","parameterTypes":["boolean"] }, 
    {"name":"useRegisteredSuffixPatternMatch","parameterTypes":[] }, 
    {"name":"useSuffixPatternMatch","parameterTypes":[] }, 
    {"name":"useTrailingSlashMatch","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.web.servlet.resource.ResourceUrlProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.testcontainers.dockerclient.UnixSocketClientProviderStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.testcontainers.junit.jupiter.Container",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.testcontainers.junit.jupiter.Testcontainers",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.testcontainers.junit.jupiter.TestcontainersExtension",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.testcontainers.shaded.com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.testcontainers.shaded.com.github.dockerjava.core.DockerConfigFile",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.testcontainers.shaded.com.github.dockerjava.core.command.AbstrAsyncDockerCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.testcontainers.shaded.com.github.dockerjava.core.command.AbstrDockerCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.testcontainers.shaded.com.github.dockerjava.core.command.CreateContainerCmdImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.testcontainers.shaded.com.github.dockerjava.core.command.ExecCreateCmdImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getContainerId","parameterTypes":[] }, 
    {"name":"getEnv","parameterTypes":[] }, 
    {"name":"getPrivileged","parameterTypes":[] }, 
    {"name":"getUser","parameterTypes":[] }, 
    {"name":"getWorkingDir","parameterTypes":[] }
  ]
},
{
  "name":"org.testcontainers.shaded.com.github.dockerjava.core.command.ExecStartCmdImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.testcontainers.shaded.com.github.dockerjava.core.command.InfoCmdImpl",
  "allDeclaredFields":true
},
{
  "name":"org.testcontainers.shaded.com.github.dockerjava.core.command.InspectContainerCmdImpl",
  "allDeclaredFields":true
},
{
  "name":"org.testcontainers.shaded.com.github.dockerjava.core.command.ListImagesCmdImpl",
  "allDeclaredFields":true
},
{
  "name":"org.testcontainers.shaded.com.github.dockerjava.core.command.StartContainerCmdImpl",
  "allDeclaredFields":true
},
{
  "name":"org.testcontainers.shaded.com.github.dockerjava.core.command.VersionCmdImpl",
  "allDeclaredFields":true
},
{
  "name":"org.testcontainers.shaded.org.awaitility.core.ConditionFactory$1",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.thymeleaf.spring6$SpringTemplateEngine"
},
{
  "name":"org.thymeleaf.spring6.SpringTemplateEngine"
},
{
  "name":"org.xmlbeam$XBProjector"
},
{
  "name":"org.xmlbeam.XBProjector"
},
{
  "name":"org.yaml.snakeyaml.Yaml"
},
{
  "name":"reactor.core.publisher.Flux"
},
{
  "name":"reactor.core.publisher.Mono"
},
{
  "name":"reactor.netty.http.client.HttpClient"
},
{
  "name":"reactor.tools.agent$ReactorDebugAgent"
},
{
  "name":"reactor.tools.agent.ReactorDebugAgent"
},
{
  "name":"reactor.util.lang$NonNullApi"
},
{
  "name":"reactor.util.lang.NonNullApi"
},
{
  "name":"scala$Option"
},
{
  "name":"scala.Option"
},
{
  "name":"scala.util.Properties"
},
{
  "name":"sun.misc.Unsafe",
  "fields":[{"name":"theUnsafe"}],
  "methods":[
    {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, 
    {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, 
    {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, 
    {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }, 
    {"name":"storeFence","parameterTypes":[] }
  ]
},
{
  "name":"sun.misc.VM"
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.JavaKeyStore$JKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.NativePRNG$NonBlocking",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.KeyManagerFactoryImpl$SunX509",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$DefaultSSLContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$TLSContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.x509.AuthorityInfoAccessExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.BasicConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CRLDistributionPointsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CertificatePoliciesExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.ExtendedKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.IssuerAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.KeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.NetscapeCertTypeExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.PrivateKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
}
]