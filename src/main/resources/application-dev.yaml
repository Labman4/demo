spring:
  #  cloud:
  #    kubernetes:
  #      discovery:
  #        enabled: true
  #        all-namespaces: true
  #        #        master-url: https://kubernetes.default.svc
  #        #      include-not-ready-addresses: true
  #        discovery-server-url: ${DISCOVERY_URL}
  #    discovery:
  #      client:
  #        health-indicator:
  #          enabled: false

  main:
    allow-bean-definition-overriding: true
  datasource:
    url: jdbc:mysql://${MYSQL_IP:mysql}:${MYSQL_PORT:3306}/demo
    username: ${MYSQL_USERNAME:root}
    password: ${MYSQL_PASSWORD:elpsy4783}
  data:
    redis:
      client-type: ${REDIS_TYPE:LETTUCE}
      password: ${REDIS_PASSWORD:elpsy4783}
      cluster:
        nodes: ${REDIS_NODE:redis:6379}
      lettuce:
        pool:
          enabled: false
          maxIdle: 10
          minIdle: 1
          maxActive: 5
          maxWait: 5
          timeBetweenEvictionRuns: 100000
      jedis:
        pool:
          enabled: true
          maxIdle: 5
          minIdle: 1
          maxActive: 5
          maxWait: 5
          timeBetweenEvictionRuns: 100000

    elasticsearch:
      repositories:
        enabled: true
  kafka:
    bootstrap-servers: ${KAFKA_URL:kafka}
    security:
      protocol: ssl
    ssl:
      trust-store-location: ${JKS:jks}
      trust-store-password: ${JKS_PASS:elpsy4783}
    consumer:
      #      security:
      #        protocol: ssl
      auto-offset-reset: earliest
  elasticsearch:
    uris:
      - ${ES_URL:192.168.1.106:9200}
    username: ${ES_USER:elastic}
    password: ${ES_PASS:Elpsy4783}
request:
  limit:
    global:
      tokens: ${GLOBAL_REQUEST_LIMIT}
      duration: ${GLOBAL_REQUEST_DURATION}
      speed: ${GLOBAL_REQUEST_DURATION_SPEED}
    scope:
      tokens: ${REQUEST_LIMIT}
      duration: ${REQUEST_DURATION}
      speed: ${REQUEST_DURATION_SPEED}
  path:
    permit: ${PERMIT_PATH:/**}
    nonPrivate: ${PUBLIC_PATH:/}
    limit: ${LIMIT_PATH:/}
    exclude:
      all: ${EXCLUDE_PATH:/}
      record: ${RECORD_EXCLUDE_PATH:/actuator}
    filter: ${FILTER_PATH:/}
  header:
    ip: ${IP_HEADER:x-forward-for}
    black: ${BLACK_HEADER:x-forward-for}
    white: ${WHITE_HEADER:x-forward-for}

    